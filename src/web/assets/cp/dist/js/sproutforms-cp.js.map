{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/web/assets/cp/src/js/editable-table.js","webpack:///./src/web/assets/cp/src/js/form-settings.js","webpack:///./src/web/assets/cp/src/js/field-layout-editor.js","webpack:///./src/web/assets/cp/src/js/field-modal.js","webpack:///./src/web/assets/cp/src/js/integration-modal.js","webpack:///./src/web/assets/cp/src/js/integrations.js","webpack:///./src/web/assets/cp/src/js/rule-modal.js","webpack:///./src/web/assets/cp/src/js/form-page-manager.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Craft","SproutForms","EditableTable","Garnish","Base","extend","initialized","id","baseName","columns","fieldRuleOptions","sorter","biggestId","$table","$tbody","$addRowBtn","init","settings","this","setSettings","defaults","$","children","DataTableSorter","helperClass","copyDraggeeInputValuesToHelper","isVisible","initialize","addListener","$win","height","removeListener","$rows","length","Row","find","addRow","initializeIfVisible","rowId","rowIdPrefix","rowHtml","getRowHtml","$tr","appendTo","addItems","first","focus","onAddRow","textualColTypes","noop","onDeleteRow","values","formFieldValue","colId","col","textual","inArray","type","options","hasOptgroups","firstRow","option","optgroup","optionLabel","label","optionValue","disabled","colVal","table","niceTexts","$tds","$textareas","$deleteBtn","tr","parseInt","attr","substr","textareasByColId","that","$textarea","add","push","NiceText","onHeightChange","proxy","initSproutFields","onTextareaHeightChange","autopopulate","val","HandleGenerator","needCheck","data","$formFieldInput","$conditionalInput","change","row","event","conditionSelectHtml","html","addValueInputHtml","last","self","lastElement","postActionRequest","response","textStatus","success","cp","displayError","SproutFields","initFields","onTextareaFocus","ev","currentTarget","setTimeout","setSelectionRange","ignoreNextTextareaFocus","validateKeypress","keyCode","charCode","isCtrlKeyPressed","RETURN_KEY","numericKeyCodes","preventDefault","validateValue","safeValue","match","replace","tallestTextareaHeight","css","tdHeight","parent","deleteRow","removeItems","remove","$andDiv","prev","FormSettings","modal","ruleModal","$lightswitches","initButtons","each","el","integrationId","ruleId","$ruleEnabledLightswitches","IntegrationModal","getInstance","on","e","integration","resetIntegration","RuleModal","rule","resetConditional","onEnableIntegration","lightswitch","enabled","formId","displayNotice","onEnableRule","$integrationDiv","$container","currentValue","addClass","removeClass","conditional","$conditionalDiv","$behaviorContainer","behavior","createDefaultIntegration","integrationTableBody","currentIntegration","sendRule","append","createDefaultRule","ruleTableBody","currentRule","editRule","currentOption","base","editIntegration","jQuery","FieldLayoutEditor","$groupButton","$fieldButton","$settings","fld","formLayout","fieldsLayout","continueEditing","drake","drakeTabs","tabsLayout","$saveFormButton","currentTabs","FieldModal","field","group","addField","resetField","getId","dragula","copy","source","accepts","target","invalid","handle","classList","contains","tab","closest","tabName","tabId","fieldType","createDefaultField","container","autoScroll","document","querySelector","margin","maxSpeed","scrollWhenOutside","down","dragging","containers","clickHandler","innerHTML","nextDiv","next","nextId","nextDivId","split","defaultName","prepend","join","initFieldOnDrop","defaultField","getElementById","fieldId","newField","show","editField","$field","$fieldDiv","htmlExample","$requiredDiv","required","instructions","newTab","detach","MutationObserver","window","WebKitMutationObserver","observe","disconnect","Modal","$body","$content","$main","$footer","$leftButtons","$rightButtons","$saveBtn","$cancelBtn","$saveSpinner","$deleteSpinner","$loadSpinner","addedDelete","$html","$js","$css","$currentHtml","$currentJs","$currentCss","$observed","observer","templateLoaded","executedJs","loadedCss","resizable","mutations","addedNodes","$bod","text","setContainer","postData","initTemplate","destroy","template","callback","initListeners","visible","initSettings","off","parseTemplate","$head","$doc","js","filter","$cssFiles","prop","$cssInline","$this","src","$jsFiles","$jsInline","jsFiles","when","runExternalScripts","then","trigger","files","filesCount","indexOf","getScript","status","destroySettings","enable","destroyListeners","disable","clone","childList","subtree","initUiElements","keys","closeModal","hide","saveField","hasClass","serialize","inputId","statusSuccess","shake","error","deleteField","confirmDeleteField","confirm","_disabled","$shade","_instance","saveIntegration","deleteIntegration","confirmDeleteIntegration","SproutFormsIntegration","integrationType","disableOptions","updateAllFieldSelects","updateTargetFieldsOnChange","forEach","elementId","rows","sourceFormFields","index","td","empty","title","mappingTableRows","$currentRows","getCurrentRows","targetIntegrationFields","$select","fields","appendFieldsToSelect","className","dropdown","closeOptgroup","selectedCode","lastItem","saveRule","deleteRule","confirmDeleteRule","FormPageManager","$formPageManagerBtn","$addFormPageBtn","formPageManager","tabAdminTable","formPageManagerTabs","selectedTabId","selectedTab","$selectedTab","showFormPageManager","formTabs","$tabs","$form","$noTabs","formTab","getAttribute","innerText","$row","escapeHtml","$renameBtn","oldName","newName","prompt","refreshTabs","initTabs","HUD","hudClass","onShow","onHide","AdminTable","tableSelector","noObjectsSelector","sortable","reorderAction","reorderSuccessMessage","reorderFailMessage","deleteAction","confirmDeleteMessage","onReorderItems","ids","$tabList","getTabHtml","replaceWith","onDeleteItem","addFormPage","tabs","$firstTab","console","log","selected"],"mappings":"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","file":"/src/web/assets/cp/dist/js/sproutforms-cp.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global Craft */\n/* global Garnish */\n/* global $ */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n/**\n * Editable table class\n */\nCraft.SproutForms.EditableTable = Garnish.Base.extend(\n  {\n    initialized: false,\n\n    id: null,\n    baseName: null,\n    columns: null,\n    fieldRuleOptions: null,\n    sorter: null,\n    biggestId: -1,\n\n    $table: null,\n    $tbody: null,\n    $addRowBtn: null,\n\n    init: function(id, baseName, columns, settings, fieldRuleOptions) {\n      this.id = id;\n      this.baseName = baseName;\n      this.columns = columns;\n      this.fieldRuleOptions = fieldRuleOptions;\n      this.setSettings(settings, Craft.SproutForms.EditableTable.defaults);\n\n      this.$table = $('#' + id);\n      this.$tbody = this.$table.children('tbody');\n\n      this.sorter = new Craft.DataTableSorter(this.$table, {\n        helperClass: 'editabletablesorthelper',\n        copyDraggeeInputValuesToHelper: true\n      });\n\n      if (this.isVisible()) {\n        this.initialize(this.fieldRuleOptions);\n      } else {\n        this.addListener(Garnish.$win, 'resize', 'initializeIfVisible');\n      }\n    },\n\n    isVisible: function() {\n      return (this.$table.height() > 0);\n    },\n\n    initialize: function(fieldRuleOptions) {\n      if (this.initialized) {\n        return;\n      }\n\n      this.initialized = true;\n      this.removeListener(Garnish.$win, 'resize');\n\n      const $rows = this.$tbody.children();\n\n      for (let i = 0; i < $rows.length; i++) {\n        new Craft.SproutForms.EditableTable.Row(this, $rows[i], fieldRuleOptions);\n      }\n\n      this.$addRowBtn = this.$table.find('.buttons').children('.add');\n      this.addListener(this.$addRowBtn, 'activate', 'addRow');\n\n      if ($rows.length === 0) {\n        this.addRow();\n      }\n    },\n\n    initializeIfVisible: function() {\n      if (this.isVisible()) {\n        this.initialize();\n      }\n    },\n\n    addRow: function() {\n      const rowId = this.settings.rowIdPrefix + (this.biggestId + 1),\n        rowHtml = Craft.SproutForms.EditableTable.getRowHtml(rowId, this.columns, this.baseName, {}, this.fieldRuleOptions),\n        $tr = $(rowHtml).appendTo(this.$tbody);\n\n      new Craft.SproutForms.EditableTable.Row(this, $tr, this.fieldRuleOptions);\n\n      const $container = $tr.find('.sprout-selectother');\n\n      this.sorter.addItems($tr);\n\n      // Focus the first input in the row\n      $tr.find('input,textarea,select').first().focus();\n\n      this.settings.onAddRow($tr);\n      this.$addRowBtn = $tr.find('#add-rule');\n      this.addListener(this.$addRowBtn, 'activate', 'addRow');\n    }\n  },\n  {\n    textualColTypes: ['singleline', 'multiline', 'number'],\n    defaults: {\n      rowIdPrefix: '',\n      onAddRow: $.noop,\n      onDeleteRow: $.noop\n    },\n\n    getRowHtml: function(rowId, columns, baseName, values, fieldRuleOptions) {\n      let rowHtml = '<tr data-id=\"' + rowId + '\">';\n      let formFieldName = \"\";\n      let formFieldValue = \"\";\n      let conditionFieldName = \"\";\n      let conditionFieldValue = \"\";\n      for (let colId in columns) {\n        const col = columns[colId],\n          name = baseName + '[condition-' + rowId + '][' + colId + ']',\n          value = (typeof values[colId] !== 'undefined' ? values[colId] : ''),\n          textual = Craft.inArray(col.type, Craft.SproutForms.EditableTable.textualColTypes);\n        if (colId === '0') {\n          formFieldName = name;\n          formFieldValue = value !== '' ? value : col.options[0].value;\n        }\n\n        rowHtml += '<td class=\"' + (textual ? 'textual' : '') + ' ' + (typeof col['class'] !== 'undefined' ? col['class'] : '') + '\"' +\n          (typeof col['width'] !== 'undefined' ? ' width=\"' + col['width'] + '\"' : '') +\n          '>';\n\n        switch (col.type) {\n          case 'select': {\n            rowHtml += '<div class=\"select\"><select name=\"' + name + '\">';\n\n            let hasOptgroups = false;\n\n            let firstRow = 'selected';\n\n            for (let key in col.options) {\n              let option = col.options[key];\n\n              if (typeof option.optgroup !== 'undefined') {\n                if (hasOptgroups) {\n                  rowHtml += '</optgroup>';\n                } else {\n                  hasOptgroups = true;\n                }\n\n                rowHtml += '<optgroup label=\"' + option.optgroup + '\">';\n              } else {\n                let optionLabel = (typeof option.label !== 'undefined' ? option.label : option),\n                  optionValue = (typeof option.value !== 'undefined' ? option.value : key),\n                  optionDisabled = (typeof option.disabled !== 'undefined' ? option.disabled : false);\n\n                rowHtml += '<option ' + firstRow + ' value=\"' + optionValue + '\"' + (optionValue === value ? ' selected' : '') + (optionDisabled ? ' disabled' : '') + '>' + optionLabel + '</option>';\n              }\n\n              firstRow = '';\n            }\n\n            if (hasOptgroups) {\n              rowHtml += '</optgroup>';\n            }\n\n            rowHtml += '</select></div>';\n\n            break;\n          }\n\n          case 'selectCondition': {\n            conditionFieldName = name;\n            const colVal = typeof col.options[0] !== 'undefined' ? col.options[0].value : '';\n            conditionFieldValue = value !== '' ? value : colVal;\n\n            rowHtml += '<div class=\"select\"><select data-check-value-html=\"true\" name=\"' + name + '\">';\n            col.options = fieldRuleOptions[formFieldValue]['conditionsAsOptions'];\n            let hasOptgroups = false;\n\n            let firstRow = 'selected';\n\n            for (let key in col.options) {\n              let option = col.options[key];\n\n              if (typeof option.optgroup !== 'undefined') {\n                if (hasOptgroups) {\n                  rowHtml += '</optgroup>';\n                } else {\n                  hasOptgroups = true;\n                }\n\n                rowHtml += '<optgroup label=\"' + option.optgroup + '\">';\n              } else {\n                let optionLabel = (typeof option.label !== 'undefined' ? option.label : option),\n                  optionValue = (typeof option.value !== 'undefined' ? option.value : key),\n                  optionDisabled = (typeof option.disabled !== 'undefined' ? option.disabled : false);\n\n                rowHtml += '<option ' + firstRow + ' value=\"' + optionValue + '\"' + (optionValue === value ? ' selected' : '') + (optionDisabled ? ' disabled' : '') + '>' + optionLabel + '</option>';\n              }\n\n              firstRow = '';\n            }\n\n            if (hasOptgroups) {\n              rowHtml += '</optgroup>';\n            }\n\n            rowHtml += '</select></div>';\n\n            break;\n          }\n\n          case 'checkbox': {\n            rowHtml += '<input type=\"hidden\" name=\"' + name + '\">' +\n              '<input type=\"checkbox\" name=\"' + name + '\" value=\"1\"' + (value ? ' checked' : '') + '>';\n\n            break;\n          }\n\n          default: {\n            rowHtml += '<input class=\"text fullwidth\" type=\"text\" name=\"' + name + '\" value=\"' + value + '\">';\n\n          }\n        }\n\n        rowHtml += '</td>';\n      }\n\n      rowHtml += '<td class=\"thin action\"><div class=\"buttons\"> <div id=\"add-rule\" class=\"btn add icon small\" tabindex=\"0\">OR</div> </div></td>' +\n        '<td class=\"thin action\"><a class=\"delete icon\" title=\"' + Craft.t('sprout-seo', 'Delete') + '\"></a></td>' +\n        '</tr>';\n\n      return rowHtml;\n    }\n\n  });\n\n/**\n * Editable table row class\n */\nCraft.SproutForms.EditableTable.Row = Garnish.Base.extend(\n  {\n    table: null,\n    id: null,\n    niceTexts: null,\n\n    $tr: null,\n    $tds: null,\n    $textareas: null,\n    $deleteBtn: null,\n    fieldRuleOptions: null,\n\n    init: function(table, tr, fieldRuleOptions) {\n      this.table = table;\n      this.$tr = $(tr);\n      this.$tds = this.$tr.children();\n      this.fieldRuleOptions = fieldRuleOptions;\n\n      // Get the row ID, sans prefix\n      const id = parseInt(this.$tr.attr('data-id').substr(this.table.settings.rowIdPrefix.length));\n\n      if (id > this.table.biggestId) {\n        this.table.biggestId = id;\n      }\n\n      this.$textareas = $();\n      this.niceTexts = [];\n      const textareasByColId = {};\n      const that = this;\n\n      let i = 0;\n\n      for (let colId in this.table.columns) {\n        let col = this.table.columns[colId];\n\n        if (Craft.inArray(col.type, Craft.SproutForms.EditableTable.textualColTypes)) {\n          const $textarea = $('textarea', this.$tds[i]);\n          this.$textareas = this.$textareas.add($textarea);\n\n          this.addListener($textarea, 'focus', 'onTextareaFocus');\n          this.addListener($textarea, 'mousedown', 'ignoreNextTextareaFocus');\n\n          this.niceTexts.push(new Garnish.NiceText($textarea, {\n            onHeightChange: $.proxy(this, 'onTextareaHeightChange')\n          }));\n\n          if (col.type === 'singleline' || col.type === 'number') {\n            this.addListener($textarea, 'keypress', {type: col.type}, 'validateKeypress');\n            this.addListener($textarea, 'textchange', {type: col.type}, 'validateValue');\n          }\n\n          textareasByColId[colId] = $textarea;\n        }\n\n        i++;\n      }\n\n      this.initSproutFields();\n\n      // Now that all of the text cells have been nice-ified, let's normalize the heights\n      this.onTextareaHeightChange();\n\n      // Now look for any autopopulate columns\n      for (let colId in this.table.columns) {\n        let col = this.table.columns[colId];\n\n        if (col.autopopulate && typeof textareasByColId[col.autopopulate] !== 'undefined' && !textareasByColId[colId].val()) {\n          new Craft.HandleGenerator(textareasByColId[colId], textareasByColId[col.autopopulate]);\n        }\n      }\n\n      /* We already generate the depending dropdowns when load */\n      const needCheck = this.$tr.find(\"td:eq(1)\").find(\"select\").data(\"check-value-html\");\n      const $formFieldInput = this.$tr.find(\"td:eq(0)\").find(\"select\");\n      const $conditionalInput = this.$tr.find(\"td:eq(1)\").find(\"select\");\n\n      $formFieldInput.change({row: this}, function(event) {\n        let conditionSelectHtml = '';\n        conditionSelectHtml += '<div class=\"select\"><select data-check-value-html=\"true\" name=\"' + name + '\">';\n        const col = {};\n        col['options'] = that.fieldRuleOptions[$formFieldInput.val()]['conditionsAsOptions'];\n        const value = $conditionalInput.val();\n        let hasOptgroups = false;\n\n        let firstRow = 'selected';\n\n        for (let key in col.options) {\n          const option = col.options[key];\n\n          if (typeof option.optgroup !== 'undefined') {\n            if (hasOptgroups) {\n              conditionSelectHtml += '</optgroup>';\n            } else {\n              hasOptgroups = true;\n            }\n\n            conditionSelectHtml += '<optgroup label=\"' + option.optgroup + '\">';\n          } else {\n            const optionLabel = (typeof option.label !== 'undefined' ? option.label : option),\n              optionValue = (typeof option.value !== 'undefined' ? option.value : key),\n              optionDisabled = (typeof option.disabled !== 'undefined' ? option.disabled : false);\n\n            conditionSelectHtml += '<option ' + firstRow + ' value=\"' + optionValue + '\"' + (optionValue === value ? ' selected' : '') + (optionDisabled ? ' disabled' : '') + '>' + optionLabel + '</option>';\n          }\n\n          firstRow = '';\n        }\n\n        if (hasOptgroups) {\n          conditionSelectHtml += '</optgroup>';\n        }\n\n        conditionSelectHtml += '</select></div>';\n        $conditionalInput.html(conditionSelectHtml);\n        that.addValueInputHtml(that);\n      });\n\n      $conditionalInput.change({row: this}, function(event) {\n        that.addValueInputHtml(that);\n      });\n\n      if (needCheck === true) {\n        this.addValueInputHtml();\n      }\n\n      const $deleteBtn = this.$tr.children().last().find('.delete');\n      this.addListener($deleteBtn, 'click', 'deleteRow');\n    },\n\n    addValueInputHtml(self = null) {\n      const that = (self == null) ? this : self;\n      // last element could be an input or select\n      const lastElement = this.$tr.find(\"td:eq(2)\").find(\"input\").length === 0 ? this.$tr.find(\"td:eq(2)\").find(\"select\") : this.$tr.find(\"td:eq(2)\").find(\"input\");\n      const data = {\n        'formFieldHandle': this.$tr.find(\"td:eq(0)\").find(\"select\").val(),\n        'condition': this.$tr.find(\"td:eq(1)\").find(\"select\").val(),\n        'inputName': lastElement.attr(\"name\"),\n        'inputValue': lastElement.val(),\n        'formId': $(\"#formId\").val()\n      };\n\n      Craft.postActionRequest('sprout-forms/rules/get-condition-value-input-html', data, $.proxy(function(response, textStatus) {\n        const statusSuccess = (textStatus === 'success');\n        if (statusSuccess && response.success) {\n          that.$tr.find('td:eq(2)').html(response.html);\n        } else {\n          Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to get the input html'));\n        }\n      }, this));\n    },\n\n    initSproutFields: function() {\n      Craft.SproutFields.initFields(this.$tr);\n    },\n\n    onTextareaFocus: function(ev) {\n      this.onTextareaHeightChange();\n\n      const $textarea = $(ev.currentTarget);\n\n      if ($textarea.data('ignoreNextFocus')) {\n        $textarea.data('ignoreNextFocus', false);\n        return;\n      }\n\n      setTimeout(function() {\n        const val = $textarea.val();\n\n        // Does the browser support setSelectionRange()?\n        if (typeof $textarea[0].setSelectionRange !== 'undefined') {\n          // Select the whole value\n          const length = val.length * 2;\n          $textarea[0].setSelectionRange(0, length);\n        } else {\n          // Refresh the value to get the cursor positioned at the end\n          $textarea.val(val);\n        }\n      }, 0);\n    },\n\n    ignoreNextTextareaFocus: function(ev) {\n      $.data(ev.currentTarget, 'ignoreNextFocus', true);\n    },\n\n    validateKeypress: function(ev) {\n      const keyCode = ev.keyCode ? ev.keyCode : ev.charCode;\n\n      if (!Garnish.isCtrlKeyPressed(ev) && (\n        (keyCode === Garnish.RETURN_KEY) ||\n        (ev.data.type === 'number' && !Craft.inArray(keyCode, Craft.SproutForms.EditableTable.Row.numericKeyCodes))\n      )) {\n        ev.preventDefault();\n      }\n    },\n\n    validateValue: function(ev) {\n      let safeValue;\n\n      if (ev.data.type === 'number') {\n        // Only grab the number at the beginning of the value (if any)\n        const match = ev.currentTarget.value.match(/^\\s*(-?[\\d.]*)/);\n\n        if (match !== null) {\n          safeValue = match[1];\n        } else {\n          safeValue = '';\n        }\n      } else {\n        // Just strip any newlines\n        safeValue = ev.currentTarget.value.replace(/[\\r\\n]/g, '');\n      }\n\n      if (safeValue !== ev.currentTarget.value) {\n        ev.currentTarget.value = safeValue;\n      }\n    },\n\n    onTextareaHeightChange: function() {\n      // Keep all the textareas' heights in sync\n      let tallestTextareaHeight = -1;\n\n      for (let i = 0; i < this.niceTexts.length; i++) {\n        if (this.niceTexts[i].height > tallestTextareaHeight) {\n          tallestTextareaHeight = this.niceTexts[i].height;\n        }\n      }\n\n      this.$textareas.css('min-height', tallestTextareaHeight);\n\n      // If the <td> is still taller, go with that insted\n      const tdHeight = this.$textareas.first().parent().height();\n\n      if (tdHeight > tallestTextareaHeight) {\n        this.$textareas.css('min-height', tdHeight);\n      }\n    },\n\n    deleteRow: function() {\n      this.table.sorter.removeItems(this.$tr);\n      this.$tr.remove();\n      if (this.table.$table.find('tr').length === 1) {\n        let $andDiv = this.table.$table.prev('.rules-table-and');\n        if ($andDiv.length === 1) {\n          $andDiv.remove();\n        }\n        this.table.$table.remove();\n      }\n\n      // onDeleteRow callback\n      this.table.settings.onDeleteRow(this.$tr);\n    }\n  },\n  {\n    numericKeyCodes: [9 /* (tab) */, 8 /* (delete) */, 37, 38, 39, 40 /* (arrows) */, 45, 91 /* (minus) */, 46, 190 /* period */, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 /* (0-9) */]\n  });\n","/* global Craft */\n/* global Garnish */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  Craft.SproutForms.FormSettings = Garnish.Base.extend({\n\n    options: null,\n    modal: null,\n    ruleModal: null,\n    $lightswitches: null,\n\n    /**\n     * The constructor.\n     */\n    init: function() {\n      // init method\n      this.initButtons();\n    },\n\n    /**\n     * Adds edit buttons to existing integrations.\n     */\n    initButtons: function() {\n      const that = this;\n\n      // Add listeners to all the items that start with sproutform-field-\n      $(\"a[id^='sproutform-integration']\").each(function(i, el) {\n        const integrationId = $(el).data('integrationid');\n\n        if (integrationId) {\n          that.addListener($(\"#sproutform-integration-\" + integrationId), 'activate', 'editIntegration');\n        }\n      });\n\n      // Add listeners to all Ms\n      $(\"a[id^='sproutform-rules']\").each(function(i, el) {\n        const ruleId = $(el).data('ruleId');\n\n        if (ruleId) {\n          that.addListener($(\"#sproutform-rules-\" + ruleId), 'activate', 'editRule');\n        }\n      });\n\n      this.$lightswitches = $('.sproutforms-integration-row .lightswitch');\n\n      this.addListener(this.$lightswitches, 'click', 'onEnableIntegration');\n\n      this.$ruleEnabledLightswitches = $('.sproutforms-rules-row .lightswitch');\n\n      this.addListener(this.$ruleEnabledLightswitches, 'click', 'onEnableRule');\n\n      this.modal = Craft.SproutForms.IntegrationModal.getInstance();\n\n      this.modal.on('saveIntegration', $.proxy(function(e) {\n        const integration = e.integration;\n        // Let's update the name if the integration is updated\n        this.resetIntegration(integration);\n      }, this));\n\n      this.ruleModal = Craft.SproutForms.RuleModal.getInstance();\n\n      this.ruleModal.on('saveRule', $.proxy(function(e) {\n        const rule = e.rule;\n        // Let's update the name if the conditional is updated\n        this.resetConditional(rule);\n      }, this));\n\n      this.addListener($(\"#integrationsOptions\"), 'change', 'createDefaultIntegration');\n      this.addListener($(\"#ruleOptions\"), 'change', 'createDefaultRule');\n    },\n\n    onEnableIntegration: function(ev) {\n      const lightswitch = ev.currentTarget;\n      const integrationId = lightswitch.id;\n      let enabled = $(lightswitch).attr('aria-checked');\n      enabled = enabled === 'true' ? 1 : 0;\n      const formId = $(\"#formId\").val();\n\n      const data = {integrationId: integrationId, enabled: enabled, formId: formId};\n\n      Craft.postActionRequest('sprout-forms/integrations/enable-integration', data, $.proxy(function(response, textStatus) {\n        if (textStatus === 'success' && response.success) {\n          Craft.cp.displayNotice(Craft.t('sprout-forms', 'Integration updated.'));\n        } else {\n          Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to update integration'));\n        }\n      }, this));\n\n    },\n\n    onEnableRule: function(ev) {\n      const lightswitch = ev.currentTarget;\n      const ruleId = lightswitch.id;\n      let enabled = $(lightswitch).attr('aria-checked');\n      enabled = enabled === 'true' ? 1 : 0;\n      const formId = $(\"#formId\").val();\n\n      const data = {ruleId: ruleId, enabled: enabled, formId: formId};\n\n      Craft.postActionRequest('sprout-forms/rules/enable-rule', data, $.proxy(function(response, textStatus) {\n        if (textStatus === 'success' && response.success) {\n          Craft.cp.displayNotice(Craft.t('sprout-forms', 'Conditional updated.'));\n        } else {\n          Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to update conditional'));\n        }\n      }, this));\n\n    },\n\n    /**\n     * Renames | update icon |\n     * of an existing integration after edit it\n     *\n     * @param integration\n     */\n    resetIntegration: function(integration) {\n      const $integrationDiv = $(\"#sproutform-integration-\" + integration.id);\n\n      const $container = $(\"#integration-enabled-\" + integration.id);\n\n      const currentValue = integration.enabled === '1' ? true : false;\n      const settingsValue = $container.attr('aria-checked') === 'true' ? true : false;\n      if (currentValue !== settingsValue) {\n        $container.attr('aria-checked', \"\" + currentValue);\n        if (currentValue) {\n          $container.addClass(\"on\");\n        } else {\n          $container.removeClass(\"on\");\n        }\n      }\n      $integrationDiv.html(integration.name);\n    },\n\n    /**\n     * Renames | update icon |\n     * of an existing conditional after edit it\n     *\n     * @param conditional\n     */\n    resetConditional: function(conditional) {\n      const $conditionalDiv = $(\"#sproutform-rules-\" + conditional.id);\n\n      const $container = $(\"#condition-enabled-\" + conditional.id);\n      const $behaviorContainer = $(\"#sproutform-rules-behavior-\" + conditional.id);\n      const currentValue = conditional.enabled === '1' ? true : false;\n      const settingsValue = $container.attr('aria-checked') === 'true' ? true : false;\n      if (currentValue !== settingsValue) {\n        $container.attr('aria-checked', \"\" + currentValue);\n        if (currentValue) {\n          $container.addClass(\"on\");\n        } else {\n          $container.removeClass(\"on\");\n        }\n      }\n      $behaviorContainer.html(conditional.behavior);\n      $conditionalDiv.html(conditional.name);\n    },\n\n    createDefaultIntegration: function(type) {\n\n      const that = this;\n      const integrationTableBody = $('#sproutforms-integrations-table tbody');\n      const currentIntegration = $(\"#integrationsOptions\").val();\n      const formId = $(\"#formId\").val();\n\n      if (currentIntegration === '') {\n        return;\n      }\n\n      const data = {\n        type: currentIntegration,\n        formId: formId,\n        sendRule: '*'\n      };\n\n      Craft.postActionRequest('sprout-forms/integrations/save-integration', data, $.proxy(function(response, textStatus) {\n        if (textStatus === 'success') {\n          const integration = response.integration;\n\n          integrationTableBody.append('<tr class=\"field sproutforms-integration-row\" id =\"sproutforms-integration-row-' + integration.id + '\">' +\n            '<td class=\"heading\">' +\n            '<a href=\"#\" id =\"sproutform-integration-' + integration.id + '\" data-integrationid=\"' + integration.id + '\">' + integration.name + '</a>' +\n            '</td>' +\n            '<td>' +\n            '<div class=\"lightswitch small\" tabindex=\"0\" data-value=\"1\" role=\"checkbox\" aria-checked=\"false\" id =\"integration-enabled-' + integration.id + '\">' +\n            '<div class=\"lightswitch-container\">' +\n            '<div class=\"label on\"></div>' +\n            '<div class=\"handle\"></div>' +\n            '<div class=\"label off\"></div>' +\n            '</div>' +\n            '<input type=\"hidden\" name=\"\" value=\"\">' +\n            '</div>' +\n            '</td>' +\n            '</tr>');\n\n          that.addListener($(\"#sproutform-integration-\" + integration.id), 'activate', 'editIntegration');\n\n          $('#integrationsOptions').val('');\n          const $container = $(\"#integration-enabled-\" + integration.id);\n          $container.lightswitch();\n          that.addListener($container, 'click', 'onEnableIntegration');\n        } else {\n          // something went wrong\n        }\n      }, this));\n\n    },\n\n    createDefaultRule: function(type) {\n      const that = this;\n      const ruleTableBody = $(\"#sproutforms-rules-table tbody\");\n      const currentRule = $(\"#ruleOptions\").val();\n      const formId = $(\"#formId\").val();\n\n      if (currentRule === '') {\n        return;\n      }\n\n      const data = {\n        type: currentRule,\n        formId: formId\n      };\n\n      Craft.postActionRequest('sprout-forms/rules/save-rule', data, $.proxy(function(response, textStatus) {\n        if (textStatus === 'success') {\n          const rule = response.rule;\n          ruleTableBody.append('<tr id =\"sproutforms-rules-row-' + rule.id + '\" class=\"field sproutforms-rules-row\">' +\n            '<td>' +\n            '<a href=\"#\" id =\"sproutform-rules-' + rule.id + '\" data-rule-id=\"' + rule.id + '\">' + rule.name + '</a>' +\n            '</td>' +\n            '<td>' +\n            '<div id =\"sproutform-rules-behavior-' + rule.id + '\">' + rule.behavior + '</div>' +\n            '</td>' +\n            '<td>' +\n            '<div class=\"lightswitch small\" tabindex=\"0\" data-value=\"1\" role=\"checkbox\" aria-checked=\"false\" id =\"condition-enabled-' + rule.id + '\">' +\n            '<div class=\"lightswitch-container\">' +\n            '<div class=\"label on\"></div>' +\n            '<div class=\"handle\"></div>' +\n            '<div class=\"label off\"></div>' +\n            '</div>' +\n            '<input type=\"hidden\" name=\"\" value=\"\">' +\n            '</div>' +\n            '</td>' +\n            '</tr>');\n\n          that.addListener($(\"#sproutform-rules-\" + rule.id), 'activate', 'editRule');\n\n          $('#ruleOptions').val('');\n          const $container = $(\"#condition-enabled-\" + rule.id);\n          $container.lightswitch();\n          that.addListener($container, 'click', 'onEnableRule');\n        } else {\n          // something went wrong\n        }\n      }, this));\n\n    },\n\n    editRule: function(currentOption) {\n\n      const option = currentOption.currentTarget;\n      const ruleId = $(option).data('ruleId');\n      // Make our field available to our parent function\n      //this.$field = $(option);\n      this.base($(option));\n\n      this.ruleModal.editRule(ruleId);\n    },\n\n    editIntegration: function(currentOption) {\n      const option = currentOption.currentTarget;\n\n      const integrationId = $(option).data('integrationid');\n      // Make our field available to our parent function\n      //this.$field = $(option);\n      this.base($(option));\n\n      this.modal.editIntegration(integrationId);\n    },\n\n  });\n\n})(jQuery);","/* global Craft */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  /**\n   * Craft.SproutForms.FieldLayoutEditor class\n   * Handles the buttons for creating new groups and fields inside a the drag and drop UI\n   */\n  Craft.SproutForms.FieldLayoutEditor = Garnish.Base.extend({\n\n    $container: null,\n    $groupButton: null,\n    $fieldButton: null,\n    $settings: null,\n\n    fld: null,\n    modal: null,\n    formLayout: null,\n    fieldsLayout: null,\n    continueEditing: null,\n\n    // The Dragula instance\n    drake: null,\n    // The dragula instance for tabs\n    drakeTabs: null,\n    tabsLayout: null,\n    $saveFormButton: null,\n\n    /**\n     * The constructor.\n     * @param currentTabs\n     * @param continueEditing\n     */\n    init: function(currentTabs, continueEditing) {\n      const that = this;\n\n      this.$saveFormButton = $(\"#save-form-button\");\n\n      this.continueEditing = continueEditing;\n\n      this.initButtons();\n\n      this.modal = Craft.SproutForms.FieldModal.getInstance();\n\n      this.modal.on('newField', $.proxy(function(e) {\n        const field = e.field;\n        const group = field.group;\n        this.addField(field.id, field.name, group.name);\n      }, this));\n\n      this.modal.on('saveField', $.proxy(function(e) {\n        const field = e.field;\n        const group = field.group;\n        // Let's update the name and the icon if the field is updated\n        this.resetField(field, group);\n      }, this));\n\n      // DRAGULA\n      this.fieldsLayout = this.getId('right-copy');\n\n      // Drag from right to left\n      this.drake = dragula([null, this.fieldsLayout], {\n        copy: function(el, source) {\n          return source === that.fieldsLayout;\n        },\n        accepts: function(el, target) {\n          return target !== that.fieldsLayout;\n        },\n        invalid: function(el, handle) {\n          // do not move any item with donotdrag class.\n          return el.classList.contains('donotdrag');\n        }\n      })\n        .on('drag', function(el) {\n          $(el).addClass('drag-active');\n        })\n        .on('drop', function(el, target, source) {\n          $(el).removeClass('drag-active');\n          $(target).find('.drag-active').removeClass('drag-active');\n          $(source).find('.drag-active').removeClass('drag-active');\n\n          // Reorder fields\n          if ($(target).attr(\"id\") === $(source).attr(\"id\")) {\n            // just if we need check when the field is reorder\n            // not needed because the order is saved from the hidden field\n            // when the form is saved\n          }\n          if (target && source === that.fieldsLayout) {\n            // get the tab name by the first div fields\n            const tab = $(el).closest(\".sproutforms-tab-fields\");\n            const tabName = tab.data('tabname');\n            const tabId = tab.data('tabid');\n            const fieldType = $(el).data(\"type\");\n\n            that.createDefaultField(fieldType, tabId, tabName, el);\n          }\n        })\n        .on('over', function(el, container) {\n          $(el).addClass('drag-active');\n          $(container).addClass('container-active');\n        })\n        .on('out', function(el, container) {\n          $(el).removeClass('drag-active');\n          $(container).removeClass('container-active');\n        });\n\n      // Adds auto-scroll to main container when dragging\n      const scroll = autoScroll(\n        [\n          document.querySelector('#content-container')\n        ],\n        {\n          margin: 20,\n          maxSpeed: 10,\n          scrollWhenOutside: true,\n          autoScroll: function() {\n            //Only scroll when the pointer is down, and there is a child being dragged.\n            return this.down && that.drake.dragging;\n          }\n        }\n      );\n\n      // Add the drop containers for each tab\n      for (let i = 0; i < currentTabs.length; i++) {\n        this.drake.containers.push(this.getId('sproutforms-tab-container-' + currentTabs[i].id));\n      }\n      // Prevent save with Ctrl+S when the the field is dropped\n      /*$(document).bind('keydown', function(e) {\n          if(e.ctrlKey && (e.which == 83)) {\n              if (!that.$saveFormButton.removeClass('disabled').siblings('.spinner').hasClass(\"hidden\")){\n                  e.preventDefault();\n                  e.stopPropagation();\n                  // Not working\n                  return false;\n              }\n          }\n      });*/\n    },\n\n    clickHandler: function(e) {\n      const target = e.target;\n      if (target === this.tabsLayout) {\n        return;\n      }\n      target.innerHTML += ' [click!]';\n\n      setTimeout(function() {\n        target.innerHTML = target.innerHTML.replace(/ \\[click!]/g, '');\n      }, 500);\n    },\n\n    createDefaultField: function(type, tabId, tabName, el) {\n      $(el).removeClass('source-field');\n      $(el).addClass('target-field');\n      $(el).find('.source-field-header').remove();\n      $(el).find('.body').removeClass('hidden');\n      // try to check position of the field\n      let nextDiv = $(el).next(\".target-field\");\n      let nextId = nextDiv.attr('id');\n      if (typeof nextId === 'undefined' || nextId === null) {\n        nextDiv = null;\n      } else {\n        // Last field\n        const nextDivId = nextId.split('-');\n        nextId = nextDivId[1];\n      }\n\n      const defaultName = $(el).data('defaultname') ? $(el).data('defaultname') : Craft.t('sprout-forms', 'Untitled');\n\n      // Add the Field Header\n      $(el).prepend($([\n        '<div class=\"active-field-header\">',\n        '<h2>', defaultName, '</h2>',\n        '</div>'\n      ].join('')));\n\n      const formId = $(\"#formId\").val();\n      const data = {\n        'type': type,\n        'formId': formId,\n        'tabId': tabId,\n        'nextId': nextId\n      };\n\n      Craft.postActionRequest('sprout-forms/fields/create-field', data, $.proxy(function(response, textStatus) {\n        if (textStatus === 'success') {\n          this.initFieldOnDrop(response.field, tabName, el);\n          //that.$saveFormButton.removeClass('disabled').siblings('.spinner').addClass('hidden');\n        }\n      }, this));\n    },\n\n    initFieldOnDrop: function(defaultField, tabName, el) {\n      if (defaultField !== null && defaultField.hasOwnProperty(\"id\")) {\n        $(el).attr('id', 'sproutfield-' + defaultField.id);\n\n        // Add the Settings buttons\n        $(el).prepend($([\n          '<ul class=\"settings\">',\n          '<li><a id=\"sproutform-field-', defaultField.id, '\" data-fieldid=\"', defaultField.id, '\" href=\"#\" tabindex=\"0\" ><i class=\"fa fa-pencil fa-2x\" title=\"', Craft.t('sprout-forms', 'Edit'), '\"></i></a></li>',\n          '</ul>'\n        ].join('')));\n\n        // Add fieldLayout input\n        $(el).append($([\n            '<input type=\"hidden\" name=\"fieldLayout[', tabName, '][]\" value=\"', defaultField.id, '\" class=\"id-input\">'\n          ].join('')\n        ));\n\n        this.addListener($(\"#sproutform-field-\" + defaultField.id), 'activate', 'editField');\n      } else {\n        Craft.cp.displayError(Craft.t('sprout-forms', 'Something went wrong when creating the field :('));\n\n        $(el).remove();\n      }\n    },\n\n    getId: function(id) {\n      return document.getElementById(id);\n    },\n\n    /**\n     * Adds edit buttons to existing fields.\n     */\n    initButtons: function() {\n      const that = this;\n\n      // Add listeners to all the items that start with sproutform-field-\n      $(\"a[id^='sproutform-field-']\").each(function(i, el) {\n        const fieldId = $(el).data('fieldid');\n\n        if (fieldId) {\n          that.addListener($(\"#sproutform-field-\" + fieldId), 'activate', 'editField');\n        }\n      });\n    },\n\n    /**\n     * Event handler for the New Field button.\n     * Creates a modal window that contains new field settings.\n     */\n    newField: function() {\n      this.modal.show();\n    },\n\n    editField: function(currentOption) {\n      const option = currentOption.currentTarget;\n\n      const fieldId = $(option).data('fieldid');\n      // Make our field available to our parent function\n      this.$field = $(option);\n      this.base($(option));\n\n      this.modal.editField(fieldId);\n    },\n\n    /**\n     * Renames | update icon | move field to another tab\n     * of an existing field after edit it\n     *\n     * @param field\n     * @param group\n     */\n    resetField: function(field, group) {\n\n      const $fieldDiv = $(\"#sproutfield-\" + field.id);\n\n      // Lets update the the name and icon - (new) update if required\n      $($fieldDiv).find('.body').html(field.htmlExample);\n      const $requiredDiv = $($fieldDiv).find(\"[name='requiredFields[]']\");\n\n      if (field.required) {\n        $($fieldDiv).find('.active-field-header h2').addClass('required');\n\n        // Update or create our hidden required div\n        if (!$requiredDiv.length) {\n          $('<input type=\"hidden\" name=\"requiredFields[]\" value=\"' + field.id + '\" class=\"sproutforms-required-input\">').appendTo($fieldDiv);\n        } else {\n          $($requiredDiv).val(field.id);\n        }\n      } else {\n        $($fieldDiv).find('.active-field-header h2').removeClass('required');\n\n        // Update our hidden required div\n        $($requiredDiv).val('');\n      }\n\n      $($fieldDiv).find('.active-field-header h2').html(field.name);\n      $($fieldDiv).find('.active-field-header p').html(field.instructions);\n\n      // Check if we need move the field to another tab\n      const tab = $($fieldDiv).closest(\".sproutforms-tab-fields\");\n      const tabName = tab.data('tabname');\n      const tabId = tab.data('tabid');\n\n      if (tabName !== group.name) {\n        // let's remove the hidden field just if the user change the tab\n        $($fieldDiv).find('.id-input').remove();\n\n        // create the new hidden field and add it to the field div\n        const $field = $([\n          '<input class=\"id-input\" type=\"hidden\" name=\"fieldLayout[', group.name, '][]\" value=\"', field.id, '\">'\n        ].join('')).appendTo($($fieldDiv));\n\n        // move the field to another tab\n        const newTab = $(\"#sproutforms-tab-container-\" + group.id);\n\n        // move element to new div - like ctrl+x\n        $($fieldDiv).detach().appendTo($(newTab));\n      }\n    }\n  });\n\n})(jQuery);\n","/*\n * @link      https://sprout.barrelstrengthdesign.com/\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license   http://sprout.barrelstrengthdesign.com/license\n */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  let MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n  // If mutation observer is not supported, create a harness for it for graceful degradation.\n  // Older browsers could be supported through the DOMNodeInserted event, but that can be saved for another day...\n  if (!MutationObserver) {\n    MutationObserver = function() {\n    };\n    MutationObserver.prototype.observe = function() {\n    };\n    MutationObserver.prototype.disconnect = function() {\n    };\n  }\n\n  /**\n   * SproutForms.FieldModal class\n   * Handles the modal window for creating new fields.\n   */\n  Craft.SproutForms.FieldModal = Garnish.Modal.extend({\n\n      $body: null,\n      $content: null,\n      $main: null,\n      $footer: null,\n      $leftButtons: null,\n      $rightButtons: null,\n      $saveBtn: null,\n      $cancelBtn: null,\n      $deleteBtn: null,\n      $saveSpinner: null,\n      $deleteSpinner: null,\n      $loadSpinner: null,\n      addedDelete: false,\n\n      $html: null,\n      $js: null,\n      $css: null,\n      $currentHtml: null,\n      $currentJs: null,\n      $currentCss: null,\n\n      $observed: null,\n      observer: null,\n\n      templateLoaded: false,\n      executedJs: null,\n      loadedCss: null,\n\n      /**\n       * The constructor.\n       */\n      init: function(settings) {\n        this.base();\n        this.setSettings(settings, {\n          resizable: true\n        });\n\n        this.$currentHtml = $();\n        this.$currentJs = $();\n        this.$currentCss = $();\n        this.$observed = $();\n\n        this.executedJs = {};\n        this.loadedCss = {};\n\n        // Observe the DOM\n        this.observer = new MutationObserver($.proxy(function(mutations) {\n          for (let i = 0; i < mutations.length; i++) {\n            this.$observed = this.$observed.add(mutations[i].addedNodes);\n          }\n        }, this));\n\n        const $container = $('<form class=\"modal sprout-field-modal\" style=\"display: none; opacity: 0;\">').appendTo(Garnish.$bod);\n\n        this.$body = $('<div class=\"body\">').appendTo($container);\n        this.$content = $('<div class=\"content\">').appendTo(this.$body);\n        this.$main = $('<div class=\"main\">').appendTo(this.$content);\n        this.$footer = $('<div class=\"footer\">').appendTo($container);\n        this.$loadSpinner = $('<div class=\"spinner big\">').appendTo($container);\n\n        this.$leftButtons = $('<div class=\"buttons left\">').appendTo(this.$footer);\n        this.$rightButtons = $('<div class=\"buttons right\">').appendTo(this.$footer);\n\n        this.$deleteSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$leftButtons);\n\n        this.$deleteBtn = $('<div class=\"btn delete hidden\" role=\"button\">').text(Craft.t('sprout-forms', 'Delete')).appendTo(this.$leftButtons);\n        this.$cancelBtn = $('<div class=\"btn disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Cancel')).appendTo(this.$rightButtons);\n        this.$saveBtn = $('<div class=\"btn submit disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Save')).appendTo(this.$rightButtons);\n        this.$saveSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$rightButtons);\n\n        this.setContainer($container);\n        const formId = $(\"#formId\").val();\n        const postData = {\n          formId: formId\n        };\n\n        // Loads the field settings template file, as well as all the resources that come with it\n        Craft.postActionRequest('sprout-forms/fields/modal-field', postData, $.proxy(function(response, textStatus) {\n          if (textStatus === 'success') {\n            this.$loadSpinner.addClass('hidden');\n            this.initTemplate(response);\n          } else {\n            this.destroy();\n          }\n        }, this));\n      },\n\n      /**\n       * Prepares the field settings template HTML, CSS and Javascript.\n       *\n       * @param template\n       */\n      initTemplate: function(template) {\n        const callback = $.proxy(function(e) {\n          this.$html = e.$html;\n          this.$js = e.$js;\n          this.$css = e.$css;\n\n          this.templateLoaded = true;\n          this.initListeners();\n          if (this.visible) {\n            this.initSettings();\n          }\n\n          this.off('parseTemplate', callback);\n        }, this);\n\n        this.on('parseTemplate', callback);\n        this.parseTemplate(template);\n      },\n\n      /**\n       * Takes raw HTML, CSS and Javascript and parses it ready to be used in the DOM.\n       * It also loads any external resources if they are needed.\n       *\n       * @param template\n       */\n      parseTemplate: function(template) {\n        const that = this;\n        const $head = Garnish.$doc.find('head');\n\n        const $html = $(template.html);\n        const $js = $(template.js).filter('script');\n        const $css = $(template.css).filter('style, link');\n\n        // Ensure that external stylesheets are loaded asynchronously\n        const $cssFiles = $css.filter('link').prop('async', true);\n        const $cssInline = $css.filter('style');\n\n        $cssFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('href');\n\n          if (!that.loadedCss.hasOwnProperty(src)) {\n            $head.append($this);\n            that.loadedCss[src] = $this;\n          }\n        });\n\n        // Load external Javascript files asynchronously, and remove them from being executed again.\n        // This assumes that external Javascript files are simply library files, that don't directly and\n        // instantly execute code that modifies the DOM. Library files can be loaded and executed once and\n        // reused later on.\n        // The Javascript tags that directly contain code are assumed to be context-dependent, so they are\n        // saved to be executed each time the modal is opened.\n        const $jsFiles = $js.filter('[src]');\n        const $jsInline = $js.filter(':not([src])');\n\n        const jsFiles = [];\n        $jsFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('src');\n          if (!that.executedJs.hasOwnProperty(src)) {\n            jsFiles.push(src);\n            that.executedJs[src] = true;\n          }\n        });\n\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n          that.trigger('parseTemplate', {\n            target: this,\n            $html: $html,\n            $js: $jsInline,\n            $css: $cssInline\n          });\n        };\n        // Fixes bug on Craft3 - Updates way to callback function\n        $.when(this.runExternalScripts(jsFiles)).then(callback());\n        //this.runExternalScripts(jsFiles);\n\n        this.$deleteBtn.removeClass('hidden');\n        this.$saveBtn.removeClass('disabled');\n        this.$cancelBtn.removeClass('disabled');\n      },\n\n      /**\n       * Runs external Javascript files\n       *\n       * @param files - An array of URL's (as strings) to Javascript files\n       */\n      runExternalScripts: function(files) {\n        let filesCount = files.length;\n\n        if (filesCount > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const src = files[i];\n            // Fixes Double-instantiating bug\n            if ((src.indexOf('MatrixConfigurator') >= 0) ||\n              (src.indexOf('TableFieldSettings.min.js') >= 0) ||\n              (src.indexOf('quill.min.js') >= 0) ||\n              (src.indexOf('sproutfields.js') >= 0) ||\n              (src.indexOf('EditableTable.js') >= 0) ||\n              (src.indexOf('initialize.js') >= 0)\n            ) {\n              $.getScript(src, $.proxy(function(data, status) {\n                if (status === 'success') {\n                  filesCount--;\n\n                  if (filesCount === 0) {\n                    this.trigger('runExternalScripts', {\n                      target: this\n                    });\n                  }\n                } else {\n                  Craft.cp.displayError(Craft.t('sprout-forms', 'Could not load all resources.'));\n                }\n              }, this));\n            }\n          }\n        } else {\n          this.trigger('runExternalScripts', {\n            target: this\n          });\n        }\n      },\n\n      /**\n       * Binds all listeners so the quick field buttons can start working.\n       */\n      initListeners: function() {\n        this.$deleteBtn.addClass('hidden');\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.addListener(this.$cancelBtn, 'activate', 'closeModal');\n        this.addListener(this.$saveBtn, 'activate', 'saveField');\n        if (!this.addedDelete) {\n          this.addListener(this.$deleteBtn, 'click', 'deleteField');\n          this.addedDelete = true;\n        }\n\n        this.on('show', this.initSettings);\n        this.on('fadeOut', this.destroySettings);\n\n        this.enable();\n      },\n\n      /**\n       * Unbinds all listeners.\n       */\n      destroyListeners: function() {\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.removeListener(this.$cancelBtn, 'activate');\n        this.removeListener(this.$saveBtn, 'activate');\n\n        this.off('show', this.initSettings);\n        this.off('fadeOut', this.destroySettings);\n\n        this.disable();\n      },\n\n      /**\n       * Initialises the HTML, CSS and Javascript for the modal window.\n       */\n      initSettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        // If the template files are not loaded yet, just cancel initialisation of the settings.\n        if (!that.templateLoaded) {\n          return;\n        }\n\n        that.$currentHtml = e && e.$html ? e.$html : that.$html.clone();\n        that.$currentJs = e && e.$js ? e.$js : that.$js.clone();\n        that.$currentCss = e && e.$css ? e.$css : that.$css.clone();\n\n        // Save any new nodes that are added to the body during initialisation, so they can be safely removed later.\n        that.$observed = $();\n        that.observer.observe(Garnish.$bod[0], {childList: true, subtree: false});\n\n        that.$main.append(that.$currentHtml);\n        Garnish.$bod.append(that.$currentJs);\n\n        // Only show the delete button if editing a field\n        const $fieldId = that.$main.find('input[name=\"fieldId\"]');\n\n        Craft.initUiElements();\n\n        // Rerun the external scripts as some field types may need to make DOM changes in their external files.\n        // This means that libraries are being initialized multiple times, but hopefully they're smart enough to\n        // deal with that. So far, no issues.\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n\n          // Stop observing after a healthy timeout to ensure all mutations are captured.\n          setTimeout(function() {\n            that.observer.disconnect();\n          }, 1);\n        };\n        $.when(that.runExternalScripts(Object.keys(that.executedJs))).then(callback());\n        //that.on('runExternalScripts', callback);\n        //that.runExternalScripts(Object.keys(that.executedJs));\n      },\n\n      /**\n       * Event handler for when the modal window finishes fading out after hiding.\n       * Clears out all events and elements of the modal.\n       */\n      destroySettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        that.$currentHtml.remove();\n        that.$currentJs.remove();\n        that.$currentCss.remove();\n        that.$observed.remove();\n      },\n\n      /**\n       * Event handler for the Close button.\n       * Hides the modal window from view.\n       */\n      closeModal: function() {\n        this.hide();\n      },\n\n      /**\n       * Event handler for the save button.\n       * Saves the new field form to the database.\n       *\n       * @param e\n       */\n      saveField: function(e) {\n        if (e) {\n          e.preventDefault();\n        }\n\n        if (this.$saveBtn.hasClass('disabled') || !this.$saveSpinner.hasClass('hidden')) {\n          return;\n        }\n\n        this.destroyListeners();\n\n        this.$saveSpinner.removeClass('hidden');\n        const data = this.$container.serialize();\n\n        const inputId = this.$container.find('input[name=\"fieldId\"]');\n        const id = inputId.length ? inputId.val() : false;\n\n        Craft.postActionRequest('sprout-forms/fields/save-field', data, $.proxy(function(response, textStatus) {\n          this.$saveSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            this.initListeners();\n\n            if (id === false) {\n              this.trigger('newField', {\n                target: this,\n                field: response.field\n              });\n            } else {\n              this.trigger('saveField', {\n                target: this,\n                field: response.field\n              });\n\n              Craft.cp.displayNotice(Craft.t('sprout-forms', '\\'{name}\\' field saved.', {name: response.field.name}));\n            }\n\n            this.hide();\n          } else if (statusSuccess && response.template) {\n            if (this.visible) {\n              const callback = $.proxy(function(e) {\n                this.initListeners();\n                this.destroySettings();\n                this.initSettings(e);\n                this.off('parseTemplate', callback);\n              }, this);\n\n              this.on('parseTemplate', callback);\n              this.parseTemplate(response.template);\n\n              Garnish.shake(this.$container);\n            } else {\n              this.initListeners();\n            }\n          } else {\n            this.initListeners();\n\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred.'));\n          }\n        }, this));\n      },\n\n      /**\n       *\n       * @param id\n       */\n      editField: function(id) {\n        this.destroyListeners();\n        this.show();\n        this.initListeners();\n\n        this.$loadSpinner.removeClass('hidden');\n\n        const formId = $(\"#formId\").val();\n        const data = {'fieldId': id, 'formId': formId};\n\n        Craft.postActionRequest('sprout-forms/fields/edit-field', data, $.proxy(function(response, textStatus) {\n          this.$loadSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            const callback = $.proxy(function(e) {\n              this.destroySettings();\n              this.initSettings(e);\n              this.off('parseTemplate', callback);\n            }, this);\n\n            this.on('parseTemplate', callback);\n            this.parseTemplate(response.template);\n          } else if (statusSuccess && response.error) {\n            Craft.cp.displayError(response.error);\n\n            this.hide();\n          } else {\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred. '));\n\n            this.hide();\n          }\n        }, this));\n      },\n\n      deleteField: function(e) {\n        e.preventDefault();\n        const userResponse = this.confirmDeleteField();\n\n        if (userResponse) {\n          this.destroyListeners();\n\n          const data = this.$container.serialize();\n\n          const fieldId = $(this.$container).find('input[name=\"fieldId\"]').val();\n\n          Craft.postActionRequest('sprout-forms/fields/delete-field', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n\n              Craft.cp.displayNotice(Craft.t('sprout-forms', 'Field deleted.'));\n\n              $('#sproutfield-' + fieldId).remove();\n\n              this.initListeners();\n              this.hide();\n            } else {\n              Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to delete field.'));\n\n              this.hide();\n            }\n          }, this));\n        }\n      },\n\n      confirmDeleteField: function() {\n        return confirm(\"Are you sure you want to delete this field and all of it's data?\");\n      },\n\n      /**\n       * Prevents the modal from closing if it's disabled.\n       * This fixes issues if the modal is closed when saving/deleting fields.\n       */\n      hide: function() {\n        if (!this._disabled) {\n          this.base();\n        }\n      },\n\n      /**\n       * Removes everything to do with the modal form the DOM.\n       */\n      destroy: function() {\n\n        this.base.destroy();\n\n        this.destroyListeners();\n        this.destroySettings();\n\n        this.$shade.remove();\n        this.$container.remove();\n\n        this.trigger('destroy');\n      }\n    },\n    {\n      /**\n       * (Static) Singleton pattern.\n       *\n       * @returns FieldModal\n       */\n      getInstance: function() {\n        if (!this._instance) {\n          this._instance = new Craft.SproutForms.FieldModal();\n        }\n\n        return this._instance;\n      }\n    });\n\n})(jQuery);\n","/*\n * @link      https://sprout.barrelstrengthdesign.com/\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license   http://sprout.barrelstrengthdesign.com/license\n */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  let MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n  // If mutation observer is not supported, create a harness for it for graceful degradation.\n  // Older browsers could be supported through the DOMNodeInserted event, but that can be saved for another day...\n  if (!MutationObserver) {\n    MutationObserver = function() {\n    };\n    MutationObserver.prototype.observe = function() {\n    };\n    MutationObserver.prototype.disconnect = function() {\n    };\n  }\n\n  /**\n   * SproutForms.IntegrationModal class\n   * Handles the modal window for editing integrations.\n   */\n  Craft.SproutForms.IntegrationModal = Garnish.Modal.extend({\n\n      $body: null,\n      $content: null,\n      $main: null,\n      $footer: null,\n      $leftButtons: null,\n      $rightButtons: null,\n      $saveBtn: null,\n      $cancelBtn: null,\n      $deleteBtn: null,\n      $saveSpinner: null,\n      $deleteSpinner: null,\n      $loadSpinner: null,\n      addedDelete: false,\n\n      $html: null,\n      $js: null,\n      $css: null,\n      $currentHtml: null,\n      $currentJs: null,\n      $currentCss: null,\n\n      $observed: null,\n      observer: null,\n\n      templateLoaded: false,\n      executedJs: null,\n      loadedCss: null,\n\n      /**\n       * The constructor.\n       */\n      init: function(settings) {\n        this.base();\n        this.setSettings(settings, {\n          resizable: true\n        });\n\n        this.$currentHtml = $();\n        this.$currentJs = $();\n        this.$currentCss = $();\n        this.$observed = $();\n\n        this.executedJs = {};\n        this.loadedCss = {};\n\n        // Observe the DOM\n        this.observer = new MutationObserver($.proxy(function(mutations) {\n          for (let i = 0; i < mutations.length; i++) {\n            this.$observed = this.$observed.add(mutations[i].addedNodes);\n          }\n        }, this));\n\n        const $container = $('<form class=\"modal sprout-field-modal\" style=\"display: none; opacity: 0;\">').appendTo(Garnish.$bod);\n\n        this.$body = $('<div class=\"body\">').appendTo($container);\n        this.$content = $('<div class=\"content\">').appendTo(this.$body);\n        this.$main = $('<div class=\"main\">').appendTo(this.$content);\n        this.$footer = $('<div class=\"footer\">').appendTo($container);\n        this.$loadSpinner = $('<div class=\"spinner big\">').appendTo($container);\n\n        this.$leftButtons = $('<div class=\"buttons left\">').appendTo(this.$footer);\n        this.$rightButtons = $('<div class=\"buttons right\">').appendTo(this.$footer);\n\n        this.$deleteSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$leftButtons);\n\n        this.$deleteBtn = $('<div class=\"btn delete hidden\" role=\"button\">').text(Craft.t('sprout-forms', 'Delete')).appendTo(this.$leftButtons);\n        this.$cancelBtn = $('<div class=\"btn disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Cancel')).appendTo(this.$rightButtons);\n        this.$saveBtn = $('<div class=\"btn submit disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Save')).appendTo(this.$rightButtons);\n        this.$saveSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$rightButtons);\n\n        this.setContainer($container);\n\n        this.$loadSpinner.addClass('hidden');\n        const response = {\n          html: '',\n          js: '',\n          css: '',\n        };\n        this.initTemplate(response);\n      },\n\n      /**\n       * Prepares the Integration settings template HTML, CSS and Javascript.\n       *\n       * @param template\n       */\n      initTemplate: function(template) {\n        const callback = $.proxy(function(e) {\n          this.$html = e.$html;\n          this.$js = e.$js;\n          this.$css = e.$css;\n\n          this.templateLoaded = true;\n          this.initListeners();\n          if (this.visible) {\n            this.initSettings();\n          }\n\n          this.off('parseTemplate', callback);\n        }, this);\n\n        this.on('parseTemplate', callback);\n        this.parseTemplate(template);\n      },\n\n      /**\n       * Takes raw HTML, CSS and Javascript and parses it ready to be used in the DOM.\n       * It also loads any external resources if they are needed.\n       *\n       * @param template\n       */\n      parseTemplate: function(template) {\n        const that = this;\n        const $head = Garnish.$doc.find('head');\n\n        const $html = $(template.html);\n        const $js = $(template.js).filter('script');\n        const $css = $(template.css).filter('style, link');\n\n        // Ensure that external stylesheets are loaded asynchronously\n        const $cssFiles = $css.filter('link').prop('async', true);\n        const $cssInline = $css.filter('style');\n\n        $cssFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('href');\n\n          if (!that.loadedCss.hasOwnProperty(src)) {\n            $head.append($this);\n            that.loadedCss[src] = $this;\n          }\n        });\n\n        // Load external Javascript files asynchronously, and remove them from being executed again.\n        // This assumes that external Javascript files are simply library files, that don't directly and\n        // instantly execute code that modifies the DOM. Library files can be loaded and executed once and\n        // reused later on.\n        // The Javascript tags that directly contain code are assumed to be context-dependent, so they are\n        // saved to be executed each time the modal is opened.\n        const $jsFiles = $js.filter('[src]');\n        const $jsInline = $js.filter(':not([src])');\n\n        const jsFiles = [];\n        $jsFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('src');\n          if (!that.executedJs.hasOwnProperty(src)) {\n            jsFiles.push(src);\n            that.executedJs[src] = true;\n          }\n        });\n\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n          that.trigger('parseTemplate', {\n            target: this,\n            $html: $html,\n            $js: $jsInline,\n            $css: $cssInline\n          });\n        };\n        // Fixes bug on Craft3 - Updates way to callback function\n        $.when(this.runExternalScripts(jsFiles)).then(callback());\n        //this.runExternalScripts(jsFiles);\n\n        this.$deleteBtn.removeClass('hidden');\n        this.$saveBtn.removeClass('disabled');\n        this.$cancelBtn.removeClass('disabled');\n      },\n\n      /**\n       * Runs external Javascript files\n       *\n       * @param files - An array of URL's (as strings) to Javascript files\n       */\n      runExternalScripts: function(files) {\n        let filesCount = files.length;\n\n        if (filesCount > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const src = files[i];\n\n            // Fixes Double-instantiating bug\n            if ((src.indexOf('MatrixConfigurator') >= 0) ||\n              (src.indexOf('TableFieldSettings.min.js') >= 0) ||\n              (src.indexOf('quill.min.js') >= 0) ||\n              (src.indexOf('sproutfields.js') >= 0) ||\n              (src.indexOf('EditableTable.js') >= 0) ||\n              (src.indexOf('initialize.js') >= 0)\n            ) {\n              $.getScript(src, $.proxy(function(data, status) {\n                if (status === 'success') {\n                  filesCount--;\n\n                  if (filesCount === 0) {\n                    this.trigger('runExternalScripts', {\n                      target: this\n                    });\n                  }\n                } else {\n                  Craft.cp.displayError(Craft.t('sprout-forms', 'Could not load all resources.'));\n                }\n              }, this));\n            }\n          }\n        } else {\n          this.trigger('runExternalScripts', {\n            target: this\n          });\n        }\n      },\n\n      /**\n       * Binds all listeners so the quick integration buttons can start working.\n       */\n      initListeners: function() {\n        this.$deleteBtn.addClass('hidden');\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.addListener(this.$cancelBtn, 'activate', 'closeModal');\n        this.addListener(this.$saveBtn, 'activate', 'saveIntegration');\n        if (!this.addedDelete) {\n          this.addListener(this.$deleteBtn, 'click', 'deleteIntegration');\n          this.addedDelete = true;\n        }\n\n        this.on('show', this.initSettings);\n        this.on('fadeOut', this.destroySettings);\n\n        this.enable();\n      },\n\n      /**\n       * Unbinds all listeners.\n       */\n      destroyListeners: function() {\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.removeListener(this.$cancelBtn, 'activate');\n        this.removeListener(this.$saveBtn, 'activate');\n\n        this.off('show', this.initSettings);\n        this.off('fadeOut', this.destroySettings);\n\n        this.disable();\n      },\n\n      /**\n       * Initialises the HTML, CSS and Javascript for the modal window.\n       */\n      initSettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        // If the template files are not loaded yet, just cancel initialisation of the settings.\n        if (!that.templateLoaded) {\n          return;\n        }\n\n        that.$currentHtml = e && e.$html ? e.$html : that.$html.clone();\n        that.$currentJs = e && e.$js ? e.$js : that.$js.clone();\n        that.$currentCss = e && e.$css ? e.$css : that.$css.clone();\n\n        // Save any new nodes that are added to the body during initialisation, so they can be safely removed later.\n        that.$observed = $();\n        that.observer.observe(Garnish.$bod[0], {childList: true, subtree: false});\n\n        that.$main.append(that.$currentHtml);\n        Garnish.$bod.append(that.$currentJs);\n\n        Craft.initUiElements();\n\n        // Rerun the external scripts as some field types may need to make DOM changes in their external files.\n        // This means that libraries are being initialized multiple times, but hopefully they're smart enough to\n        // deal with that. So far, no issues.\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n\n          // Stop observing after a healthy timeout to ensure all mutations are captured.\n          setTimeout(function() {\n            that.observer.disconnect();\n          }, 1);\n        };\n        $.when(that.runExternalScripts(Object.keys(that.executedJs))).then(callback());\n        //that.on('runExternalScripts', callback);\n        //that.runExternalScripts(Object.keys(that.executedJs));\n      },\n\n      /**\n       * Event handler for when the modal window finishes fading out after hiding.\n       * Clears out all events and elements of the modal.\n       */\n      destroySettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        that.$currentHtml.remove();\n        that.$currentJs.remove();\n        that.$currentCss.remove();\n        that.$observed.remove();\n      },\n\n      /**\n       * Event handler for the Close button.\n       * Hides the modal window from view.\n       */\n      closeModal: function() {\n        this.hide();\n      },\n\n      /**\n       * Event handler for the save button.\n       * Saves the Integration settings to the database.\n       *\n       * @param e\n       */\n      saveIntegration: function(e) {\n        if (e) {\n          e.preventDefault();\n        }\n\n        if (this.$saveBtn.hasClass('disabled') || !this.$saveSpinner.hasClass('hidden')) {\n          return;\n        }\n\n        this.destroyListeners();\n\n        this.$saveSpinner.removeClass('hidden');\n        const data = this.$container.serialize();\n\n        const inputId = this.$container.find('input[name=\"integrationId\"]');\n        const id = inputId.length ? inputId.val() : false;\n\n        Craft.postActionRequest('sprout-forms/integrations/save-integration', data, $.proxy(function(response, textStatus) {\n          this.$saveSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            this.initListeners();\n\n            this.trigger('saveIntegration', {\n              target: this,\n              integration: response.integration\n            });\n\n            Craft.cp.displayNotice(Craft.t('sprout-forms', '\\'{name}\\' integration saved.', {name: response.integration.name}));\n\n            this.hide();\n          } else if (statusSuccess && response.template) {\n            if (this.visible) {\n              const callback = $.proxy(function(e) {\n                this.initListeners();\n                this.destroySettings();\n                this.initSettings(e);\n                this.off('parseTemplate', callback);\n              }, this);\n\n              this.on('parseTemplate', callback);\n              this.parseTemplate(response.template);\n\n              Garnish.shake(this.$container);\n            } else {\n              this.initListeners();\n            }\n          } else {\n            this.initListeners();\n\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred.'));\n          }\n        }, this));\n      },\n\n      /**\n       *\n       * @param id\n       */\n      editIntegration: function(id) {\n        this.destroyListeners();\n        this.show();\n        this.initListeners();\n\n        this.$loadSpinner.removeClass('hidden');\n\n        const formId = $(\"#formId\").val();\n        const data = {\n          'integrationId': id,\n          'formId': formId\n        };\n\n        Craft.postActionRequest('sprout-forms/integrations/edit-integration', data, $.proxy(function(response, textStatus) {\n          this.$loadSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            const callback = $.proxy(function(e) {\n              this.destroySettings();\n              this.initSettings(e);\n              this.off('parseTemplate', callback);\n            }, this);\n\n            this.on('parseTemplate', callback);\n            this.parseTemplate(response.template);\n          } else if (statusSuccess && response.error) {\n            Craft.cp.displayError(response.error);\n\n            this.hide();\n          } else {\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred. '));\n\n            this.hide();\n          }\n        }, this));\n      },\n\n      deleteIntegration: function(e) {\n        e.preventDefault();\n        const userResponse = this.confirmDeleteIntegration();\n\n        if (userResponse) {\n          this.destroyListeners();\n\n          const data = this.$container.serialize();\n\n          const integrationId = $(this.$container).find('input[name=\"integrationId\"]').val();\n\n          Craft.postActionRequest('sprout-forms/integrations/delete-integration', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n\n              Craft.cp.displayNotice(Craft.t('sprout-forms', 'Integration deleted.'));\n\n              $('#sproutforms-integration-row-' + integrationId).remove();\n\n              this.initListeners();\n              this.hide();\n            } else {\n              Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to delete integration.'));\n\n              this.hide();\n            }\n          }, this));\n        }\n      },\n\n      confirmDeleteIntegration: function() {\n        return confirm(\"Are you sure you want to delete this integration and all of it's settings?\");\n      },\n\n      /**\n       * Prevents the modal from closing if it's disabled.\n       * This fixes issues if the modal is closed when saving/deleting integrations.\n       */\n      hide: function() {\n        if (!this._disabled) {\n          this.base();\n        }\n      },\n\n      /**\n       * Removes everything to do with the modal form the DOM.\n       */\n      destroy: function() {\n        this.base.destroy();\n\n        this.destroyListeners();\n        this.destroySettings();\n\n        this.$shade.remove();\n        this.$container.remove();\n\n        this.trigger('destroy');\n      }\n    },\n    {\n      /**\n       * (Static) Singleton pattern.\n       *\n       * @returns IntegrationModal\n       */\n      getInstance: function() {\n        if (!this._instance) {\n          this._instance = new Craft.SproutForms.IntegrationModal();\n        }\n\n        return this._instance;\n      }\n    });\n\n})(jQuery);\n","/* global Craft */\n\nclass SproutFormsIntegration {\n\n  constructor(settings) {\n    const self = this;\n\n    this.integrationType = typeof settings.integrationType !== 'undefined'\n      ? settings.integrationType\n      : '';\n\n    // Make the sourceFormField read only\n    this.disableOptions();\n\n    // Init all empty field selects\n    this.updateAllFieldSelects();\n\n    this.updateTargetFieldsOnChange = typeof settings.updateTargetFieldsOnChange !== 'undefined'\n      ? settings.updateTargetFieldsOnChange\n      : [];\n\n    this.updateTargetFieldsOnChange.forEach(function(elementId) {\n      // Register an onChange event for all Element IDs identified by the Integration\n      $(elementId).change(function() {\n        self.updateAllFieldSelects();\n      });\n    });\n  }\n\n  disableOptions() {\n    const self = this;\n    const integrationId = $('#integrationId').val();\n\n    const data = {\n      'integrationId': integrationId\n    };\n\n    Craft.postActionRequest('sprout-forms/integrations/get-source-form-fields', data, $.proxy(function(response, textStatus) {\n      const statusSuccess = (textStatus === 'success');\n      if (statusSuccess && response.success) {\n        const rows = response.sourceFormFields;\n        $('tbody .formField').each(function(index) {\n          const td = $(this);\n          td.empty();\n          const title = rows[index][\"label\"];\n          const handle = rows[index][\"value\"];\n          td.append('<div style=\"display:none;\"><select readonly name=\"settings[' + self.integrationType + '][fieldMapping][' + index + '][sourceFormField]\"><option selected value=\"' + handle + '\">' + title + '</option></select></div><div style=\"padding: 7px 10px;font-size: 12px;color:#8f98a3;\">' + title + ' <span class=\"code\">(' + handle + ')</span></div>');\n        });\n      } else {\n        Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to get the Form fields'));\n      }\n    }, this));\n\n    return null;\n  }\n\n  updateAllFieldSelects() {\n    const integrationIdBase = this.integrationType.replace(/\\\\/g, '-');\n    const mappingTableRows = 'table#settings-' + integrationIdBase + '-fieldMapping tr';\n\n    $(mappingTableRows).find('td:eq(2),th:eq(2)').remove();\n    $(mappingTableRows).find('td:eq(0),th:eq(0)').css('width', '50%');\n    $(mappingTableRows).find('td:eq(1),th:eq(1)').css('width', '50%');\n\n    const $currentRows = this.getCurrentRows('tbody .targetFields');\n\n    // Hand off all our current Form data so the Integration can use it if needed\n    const data = $(\"#integrationId\").closest('form').serialize();\n\n    const self = this;\n\n    Craft.postActionRequest('sprout-forms/integrations/get-target-integration-fields', data, $.proxy(function(response, textStatus) {\n      const statusSuccess = (textStatus === 'success');\n\n      if (statusSuccess && response.success) {\n        const rows = response.targetIntegrationFields;\n\n        if (rows.length === 0) {\n          return false;\n        }\n\n        $currentRows.each(function(index) {\n          const $select = $(this).find('select');\n          const fields = rows[index];\n\n          self.appendFieldsToSelect($select, fields);\n        });\n      } else {\n        Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to get the Form fields'));\n      }\n    }, this));\n  }\n\n  getCurrentRows(className = null) {\n    if (className === null) {\n      className = 'tbody .formField';\n    }\n    return $(className);\n  }\n\n  appendFieldsToSelect($select, fields) {\n    $select.empty();\n\n    let dropdown = '';\n    let closeOptgroup = false;\n    $select.append('<option value=\"\">' + Craft.t('sprout-forms', 'None') + '</option>');\n\n    for (i = 0; i < fields.length; i++) {\n      const field = fields[i];\n      let selectedCode = '';\n      const lastItem = i === (fields.length - 1);\n\n      if (!(\"optgroup\" in field)) {\n        if (\"selected\" in field) {\n          selectedCode = 'selected';\n        }\n        dropdown += '<option ' + selectedCode + ' value=\"' + field['value'] + '\">' + field['label'] + '</option>';\n      }\n\n      if ((\"optgroup\" in field && closeOptgroup) || (lastItem && closeOptgroup)) {\n        dropdown += '</optgroup>';\n        closeOptgroup = false;\n      }\n\n      if (\"optgroup\" in field) {\n        dropdown += '<optgroup label=\"' + field['optgroup'] + '\">';\n        closeOptgroup = true;\n      }\n    }\n\n    $select.append(dropdown);\n  }\n}\n\nwindow.SproutFormsIntegration = SproutFormsIntegration;","/* global Craft */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  let MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n  // If mutation observer is not supported, create a harness for it for graceful degradation.\n  // Older browsers could be supported through the DOMNodeInserted event, but that can be saved for another day...\n  if (!MutationObserver) {\n    MutationObserver = function() {\n    };\n    MutationObserver.prototype.observe = function() {\n    };\n    MutationObserver.prototype.disconnect = function() {\n    };\n  }\n\n  /**\n   * SproutForms.RuleModal class\n   * Handles the modal window for editing Rules.\n   */\n  Craft.SproutForms.RuleModal = Garnish.Modal.extend({\n\n      $body: null,\n      $content: null,\n      $main: null,\n      $footer: null,\n      $leftButtons: null,\n      $rightButtons: null,\n      $saveBtn: null,\n      $cancelBtn: null,\n      $deleteBtn: null,\n      $saveSpinner: null,\n      $deleteSpinner: null,\n      $loadSpinner: null,\n      addedDelete: false,\n\n      $html: null,\n      $js: null,\n      $css: null,\n      $currentHtml: null,\n      $currentJs: null,\n      $currentCss: null,\n\n      $observed: null,\n      observer: null,\n\n      templateLoaded: false,\n      executedJs: null,\n      loadedCss: null,\n\n      /**\n       * The constructor.\n       */\n      init: function(settings) {\n        this.base();\n        this.setSettings(settings, {\n          resizable: true\n        });\n\n        this.$currentHtml = $();\n        this.$currentJs = $();\n        this.$currentCss = $();\n        this.$observed = $();\n\n        this.executedJs = {};\n        this.loadedCss = {};\n\n        // Observe the DOM\n        this.observer = new MutationObserver($.proxy(function(mutations) {\n          for (let i = 0; i < mutations.length; i++) {\n            this.$observed = this.$observed.add(mutations[i].addedNodes);\n          }\n        }, this));\n\n        const $container = $('<form class=\"modal sprout-field-modal\" style=\"display: none; opacity: 0;\">').appendTo(Garnish.$bod);\n\n        this.$body = $('<div class=\"body\">').appendTo($container);\n        this.$content = $('<div class=\"content\">').appendTo(this.$body);\n        this.$main = $('<div class=\"main\">').appendTo(this.$content);\n        this.$footer = $('<div class=\"footer\">').appendTo($container);\n        this.$loadSpinner = $('<div class=\"spinner big\">').appendTo($container);\n\n        this.$leftButtons = $('<div class=\"buttons left\">').appendTo(this.$footer);\n        this.$rightButtons = $('<div class=\"buttons right\">').appendTo(this.$footer);\n\n        this.$deleteSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$leftButtons);\n\n        this.$deleteBtn = $('<div class=\"btn delete hidden\" role=\"button\">').text(Craft.t('sprout-forms', 'Delete')).appendTo(this.$leftButtons);\n        this.$cancelBtn = $('<div class=\"btn disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Cancel')).appendTo(this.$rightButtons);\n        this.$saveBtn = $('<div class=\"btn submit disabled\" role=\"button\">').text(Craft.t('sprout-forms', 'Save')).appendTo(this.$rightButtons);\n        this.$saveSpinner = $('<div class=\"spinner hidden\">').appendTo(this.$rightButtons);\n\n        this.setContainer($container);\n\n        this.$loadSpinner.addClass('hidden');\n        const response = {\n          html: '',\n          js: '',\n          css: '',\n        };\n        this.initTemplate(response);\n      },\n\n      /**\n       * Prepares the Rule settings template HTML, CSS and Javascript.\n       *\n       * @param template\n       */\n      initTemplate: function(template) {\n        const callback = $.proxy(function(e) {\n          this.$html = e.$html;\n          this.$js = e.$js;\n          this.$css = e.$css;\n\n          this.templateLoaded = true;\n          this.initListeners();\n          if (this.visible) {\n            this.initSettings();\n          }\n\n          this.off('parseTemplate', callback);\n        }, this);\n\n        this.on('parseTemplate', callback);\n        this.parseTemplate(template);\n      },\n\n      /**\n       * Takes raw HTML, CSS and Javascript and parses it ready to be used in the DOM.\n       * It also loads any external resources if they are needed.\n       *\n       * @param template\n       */\n      parseTemplate: function(template) {\n        const that = this;\n        const $head = Garnish.$doc.find('head');\n\n        const $html = $(template.html);\n        const $js = $(template.js).filter('script');\n        const $css = $(template.css).filter('style, link');\n\n        // Ensure that external stylesheets are loaded asynchronously\n        const $cssFiles = $css.filter('link').prop('async', true);\n        const $cssInline = $css.filter('style');\n\n        $cssFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('href');\n\n          if (!that.loadedCss.hasOwnProperty(src)) {\n            $head.append($this);\n            that.loadedCss[src] = $this;\n          }\n        });\n\n        // Load external Javascript files asynchronously, and remove them from being executed again.\n        // This assumes that external Javascript files are simply library files, that don't directly and\n        // instantly execute code that modifies the DOM. Library files can be loaded and executed once and\n        // reused later on.\n        // The Javascript tags that directly contain code are assumed to be context-dependent, so they are\n        // saved to be executed each time the modal is opened.\n        const $jsFiles = $js.filter('[src]');\n        const $jsInline = $js.filter(':not([src])');\n\n        const jsFiles = [];\n        $jsFiles.each(function() {\n          const $this = $(this);\n          const src = $this.prop('src');\n          if (!that.executedJs.hasOwnProperty(src)) {\n            jsFiles.push(src);\n            that.executedJs[src] = true;\n          }\n        });\n\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n          that.trigger('parseTemplate', {\n            target: this,\n            $html: $html,\n            $js: $jsInline,\n            $css: $cssInline\n          });\n        };\n        // Fixes bug on Craft3 - Updates way to callback function\n        $.when(this.runExternalScripts(jsFiles)).then(callback());\n        //this.runExternalScripts(jsFiles);\n\n        this.$deleteBtn.removeClass('hidden');\n        this.$saveBtn.removeClass('disabled');\n        this.$cancelBtn.removeClass('disabled');\n      },\n\n      /**\n       * Runs external Javascript files\n       *\n       * @param files - An array of URL's (as strings) to Javascript files\n       */\n      runExternalScripts: function(files) {\n        let filesCount = files.length;\n\n        if (filesCount > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const src = files[i];\n            // Fixes Double-instantiating bug\n            if ((src.indexOf('MatrixConfigurator') >= 0) ||\n              (src.indexOf('TableFieldSettings.min.js') >= 0) ||\n              (src.indexOf('quill.min.js') >= 0) ||\n              (src.indexOf('sproutfields.js') >= 0) ||\n              (src.indexOf('EditableTable.js') >= 0) ||\n              (src.indexOf('initialize.js') >= 0)\n            ) {\n              $.getScript(src, $.proxy(function(data, status) {\n                if (status === 'success') {\n                  filesCount--;\n\n                  if (filesCount === 0) {\n                    this.trigger('runExternalScripts', {\n                      target: this\n                    });\n                  }\n                } else {\n                  Craft.cp.displayError(Craft.t('sprout-forms', 'Could not load all resources.'));\n                }\n              }, this));\n            }\n          }\n        } else {\n          this.trigger('runExternalScripts', {\n            target: this\n          });\n        }\n      },\n\n      /**\n       * Binds all listeners so the rule buttons can start working.\n       */\n      initListeners: function() {\n        this.$deleteBtn.addClass('hidden');\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.addListener(this.$cancelBtn, 'activate', 'closeModal');\n        this.addListener(this.$saveBtn, 'activate', 'saveRule');\n        if (!this.addedDelete) {\n          this.addListener(this.$deleteBtn, 'click', 'deleteRule');\n          this.addedDelete = true;\n        }\n\n        this.on('show', this.initSettings);\n        this.on('fadeOut', this.destroySettings);\n\n        this.enable();\n      },\n\n      /**\n       * Unbinds all listeners.\n       */\n      destroyListeners: function() {\n        this.$cancelBtn.addClass('disabled');\n        this.$saveBtn.addClass('disabled');\n\n        this.removeListener(this.$cancelBtn, 'activate');\n        this.removeListener(this.$saveBtn, 'activate');\n\n        this.off('show', this.initSettings);\n        this.off('fadeOut', this.destroySettings);\n\n        this.disable();\n      },\n\n      /**\n       * Initialises the HTML, CSS and Javascript for the modal window.\n       */\n      initSettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        // If the template files are not loaded yet, just cancel initialisation of the settings.\n        if (!that.templateLoaded) {\n          return;\n        }\n\n        that.$currentHtml = e && e.$html ? e.$html : that.$html.clone();\n        that.$currentJs = e && e.$js ? e.$js : that.$js.clone();\n        that.$currentCss = e && e.$css ? e.$css : that.$css.clone();\n\n        // Save any new nodes that are added to the body during initialisation, so they can be safely removed later.\n        that.$observed = $();\n        that.observer.observe(Garnish.$bod[0], {childList: true, subtree: false});\n\n        that.$main.append(that.$currentHtml);\n        Garnish.$bod.append(that.$currentJs);\n\n        Craft.initUiElements();\n\n        // Rerun the external scripts as some field types may need to make DOM changes in their external files.\n        // This means that libraries are being initialized multiple times, but hopefully they're smart enough to\n        // deal with that. So far, no issues.\n        const callback = function() {\n          that.off('runExternalScripts', callback);\n\n          // Stop observing after a healthy timeout to ensure all mutations are captured.\n          setTimeout(function() {\n            that.observer.disconnect();\n          }, 1);\n        };\n        $.when(that.runExternalScripts(Object.keys(that.executedJs))).then(callback());\n        //that.on('runExternalScripts', callback);\n        //that.runExternalScripts(Object.keys(that.executedJs));\n      },\n\n      /**\n       * Event handler for when the modal window finishes fading out after hiding.\n       * Clears out all events and elements of the modal.\n       */\n      destroySettings: function(e) {\n        const that = e && e.target ? e.target : this;\n\n        that.$currentHtml.remove();\n        that.$currentJs.remove();\n        that.$currentCss.remove();\n        that.$observed.remove();\n      },\n\n      /**\n       * Event handler for the Close button.\n       * Hides the modal window from view.\n       */\n      closeModal: function() {\n        this.hide();\n      },\n\n      /**\n       * Event handler for the save button.\n       * Saves the Rule settings to the database.\n       *\n       * @param e\n       */\n      saveRule: function(e) {\n        if (e) {\n          e.preventDefault();\n        }\n\n        if (this.$saveBtn.hasClass('disabled') || !this.$saveSpinner.hasClass('hidden')) {\n          return;\n        }\n\n        this.destroyListeners();\n\n        this.$saveSpinner.removeClass('hidden');\n        const data = this.$container.serialize();\n\n        const inputId = this.$container.find('input[name=\"ruleId\"]');\n        const id = inputId.length ? inputId.val() : false;\n\n        Craft.postActionRequest('sprout-forms/rules/save-rule', data, $.proxy(function(response, textStatus) {\n          this.$saveSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            this.initListeners();\n\n            this.trigger('saveRule', {\n              target: this,\n              rule: response.rule\n            });\n\n            Craft.cp.displayNotice(Craft.t('sprout-forms', '\\'{name}\\' rule saved.', {\n              name: response.rule.name\n            }));\n\n            this.hide();\n          } else if (statusSuccess && response.template) {\n            if (this.visible) {\n              const callback = $.proxy(function(e) {\n                this.initListeners();\n                this.destroySettings();\n                this.initSettings(e);\n                this.off('parseTemplate', callback);\n              }, this);\n\n              this.on('parseTemplate', callback);\n              this.parseTemplate(response.template);\n\n              Garnish.shake(this.$container);\n            } else {\n              this.initListeners();\n            }\n          } else {\n            this.initListeners();\n\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred.'));\n          }\n        }, this));\n      },\n\n      /**\n       *\n       * @param id\n       */\n      editRule: function(id) {\n        this.destroyListeners();\n        this.show();\n        this.initListeners();\n\n        this.$loadSpinner.removeClass('hidden');\n\n        const formId = $(\"#formId\").val();\n        const data = {\n          'ruleId': id,\n          'formId': formId\n        };\n\n        Craft.postActionRequest('sprout-forms/rules/edit-rule', data, $.proxy(function(response, textStatus) {\n          this.$loadSpinner.addClass('hidden');\n\n          const statusSuccess = (textStatus === 'success');\n\n          if (statusSuccess && response.success) {\n            const callback = $.proxy(function(e) {\n              this.destroySettings();\n              this.initSettings(e);\n              this.off('parseTemplate', callback);\n            }, this);\n\n            this.on('parseTemplate', callback);\n            this.parseTemplate(response.template);\n          } else if (statusSuccess && response.error) {\n            Craft.cp.displayError(response.error);\n\n            this.hide();\n          } else {\n            Craft.cp.displayError(Craft.t('sprout-forms', 'An unknown error occurred. '));\n\n            this.hide();\n          }\n        }, this));\n      },\n\n      deleteRule: function(e) {\n        e.preventDefault();\n        const userResponse = this.confirmDeleteRule();\n\n        if (userResponse) {\n          this.destroyListeners();\n\n          const data = this.$container.serialize();\n\n          const ruleId = $(this.$container).find('input[name=\"ruleId\"]').val();\n\n          Craft.postActionRequest('sprout-forms/rules/delete-rule', data, $.proxy(function(response, textStatus) {\n            const statusSuccess = (textStatus === 'success');\n\n            if (statusSuccess && response.success) {\n\n              Craft.cp.displayNotice(Craft.t('sprout-forms', 'Rule deleted.'));\n\n              $('#sproutforms-rules-row-' + ruleId).remove();\n\n              this.initListeners();\n              this.hide();\n            } else {\n              Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to delete rule.'));\n\n              this.hide();\n            }\n          }, this));\n        }\n      },\n\n      confirmDeleteRule: function() {\n        return confirm(\"Are you sure you want to delete this rule and all of it's settings?\");\n      },\n\n      /**\n       * Prevents the modal from closing if it's disabled.\n       * This fixes issues if the modal is closed when saving/deleting rule.\n       */\n      hide: function() {\n        if (!this._disabled) {\n          this.base();\n        }\n      },\n\n      /**\n       * Removes everything to do with the modal form the DOM.\n       */\n      destroy: function() {\n        this.base.destroy();\n\n        this.destroyListeners();\n        this.destroySettings();\n\n        this.$shade.remove();\n        this.$container.remove();\n\n        this.trigger('destroy');\n      }\n    },\n    {\n      /**\n       * (Static) Singleton pattern.\n       *\n       * @returns RuleModal\n       */\n      getInstance: function() {\n        if (!this._instance) {\n          this._instance = new Craft.SproutForms.RuleModal();\n        }\n\n        return this._instance;\n      }\n    });\n\n})(jQuery);\n","/* global Craft */\n/* global Garnish */\n\nif (typeof Craft.SproutForms === typeof undefined) {\n  Craft.SproutForms = {};\n}\n\n(function($) {\n  Craft.SproutForms.FormPageManager = Garnish.Base.extend({\n\n    $formPageManagerBtn: null,\n    $addFormPageBtn: null,\n\n    formPageManager: null,\n    tabAdminTable: null,\n    formPageManagerTabs: [],\n    selectedTabId: null,\n\n    init: function(formId) {\n      this.formId = formId;\n      this.$formPageManagerBtn = $('#formPageManagerBtn');\n      this.$addFormPageBtn = $('#addFormPageBtn');\n\n      let selectedTab = Craft.cp.$selectedTab;\n      this.selectedTabId = selectedTab ? selectedTab.parent().data('id') : null;\n\n      this.addListener(this.$formPageManagerBtn, 'click', 'showFormPageManager');\n      this.addListener(this.$addFormPageBtn, 'click', 'addFormPage');\n    },\n\n    showFormPageManager: function() {\n      let self = this;\n\n      if (!this.formPageManager) {\n        let formTabs = Craft.cp.$tabs;\n\n        let $form = $(\n          '<form method=\"post\" accept-charset=\"UTF-8\">' +\n          '<input type=\"hidden\" name=\"action\" value=\"sprout-forms/forms/save-form-page\"/>' +\n          '</form>'\n        ).appendTo(Garnish.$bod);\n\n        let $noTabs = $('<p id=\"notabs\"' + (formTabs.length ? ' class=\"hidden\"' : '') + '>' + Craft.t('sprout-forms', 'You don’t have any tabs yet.') + '</p>').appendTo($form);\n        let $table = $('<table class=\"data' + (!formTabs.length ? ' hidden' : '') + '\"/>').appendTo($form);\n        let $tbody = $('<tbody/>').appendTo($table);\n\n        for (let formTab of formTabs) {\n          let tabId = formTab.getAttribute('data-id');\n          let tabName = formTab.querySelector('a').innerText;\n\n          let $row = $(\n            '<tr data-id=\"' + tabId + '\" data-name=\"' + Craft.escapeHtml(tabName) + '\">' +\n            '<td class=\"formpagemanagerhud-col-page-name\">' + tabName + '</td>' +\n            '<td class=\"formpagemanagerhud-col-rename thin\"><a class=\"edit icon\" title=\"' + Craft.t('app', 'Rename') + '\" role=\"button\"></a></td>' +\n            '<td class=\"formpagemanagerhud-col-move thin\"><a class=\"move icon\" title=\"' + Craft.t('app', 'Reorder') + '\" role=\"button\"></a></td>' +\n            '<td class=\"thin\"><a class=\"delete icon\" title=\"' + Craft.t('app', 'Delete') + '\" role=\"button\"></a></td>' +\n            '</tr>'\n          );\n\n          $renameBtn = $row.find('> td.formpagemanagerhud-col-rename');\n\n          this.addListener($renameBtn, 'click', function(event) {\n            let $row = $(event.currentTarget).parent();\n            let oldName = $row.find('.formpagemanagerhud-col-page-name').text();\n            let newName = prompt(Craft.t('sprout-forms', 'Test'), oldName);\n            let tabId = $row.data('id');\n\n            let data = {\n              tabId: tabId,\n              newName: newName\n            };\n\n            Craft.postActionRequest('sprout-forms/fields/rename-form-tab', data, function(response) {\n              if (response.success) {\n                self.refreshTabs();\n                Craft.cp.displayNotice(Craft.t('sprout-forms', 'Page renamed.'));\n              }\n              else {\n                Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to rename page.'));\n              }\n            });\n\n            if (newName && newName !== oldName) {\n              // Tab in field layout\n              $('li[data-id=\"'+tabId+'\"] a').text(newName);\n\n              // Tab row in Page Manager modal\n              $row.find('.formpagemanagerhud-col-page-name').text(newName);\n            }\n\n            Craft.cp.initTabs();\n          });\n\n          this.formPageManagerTabs[tabId] = $row;\n          $row.appendTo($tbody);\n        }\n\n        this.formPageManager = new Garnish.HUD(this.$formPageManagerBtn, $form, {\n          hudClass: 'hud formpagemanagerhud',\n          onShow: $.proxy(function() {\n            this.$formPageManagerBtn.addClass('active');\n          }, this),\n          onHide: $.proxy(function() {\n            this.$formPageManagerBtn.removeClass('active');\n          }, this)\n        });\n\n        this.tabAdminTable = new Craft.AdminTable({\n          tableSelector: $table,\n          noObjectsSelector: $noTabs,\n          sortable: true,\n          reorderAction: 'sprout-forms/fields/reorder-form-tabs',\n          reorderSuccessMessage: Craft.t('sprout-forms', 'Items reordered.') ,\n          reorderFailMessage: Craft.t('sprout-forms', 'Couldn’t reorder items.'),\n          deleteAction: 'sprout-forms/fields/delete-form-tab',\n          confirmDeleteMessage: Craft.t('sprout-forms', \"Are you sure you want to delete this tab, all of it's fields, and all of it's data?\"),\n          onReorderItems: $.proxy(function(ids) {\n            let $tabList = self.getTabHtml(ids);\n            $('#tabs ul').replaceWith($tabList);\n            Craft.cp.initTabs();\n          }, this),\n          onDeleteItem: $.proxy(function(id) {\n            let $pageManagerTab = this.formPageManagerTabs[id];\n            $pageManagerTab.remove();\n            self.refreshTabs();\n          }, this)\n        });\n\n      } else {\n        this.formPageManager.show();\n      }\n\n    },\n\n    addFormPage: function() {\n      let self = this;\n      let name = prompt(Craft.t('sprout-forms', 'Page Name'));\n\n      let data = {\n        formId: this.formId,\n        name: name\n      };\n\n      Craft.postActionRequest('sprout-forms/fields/add-form-tab', data, function(response) {\n        if (response.success) {\n          self.refreshTabs();\n          Craft.cp.displayNotice(Craft.t('sprout-forms', 'Page added.'));\n        }\n        else {\n          Craft.cp.displayError(Craft.t('sprout-forms', 'Unable to add page.'));\n        }\n      });\n    },\n\n    refreshTabs: function() {\n      let self = this;\n\n      let data = {\n        formId: this.formId\n      };\n\n      Craft.postActionRequest('sprout-forms/fields/get-form-tabs', data, function(response) {\n        if (response.success) {\n          let tabs = response.tabs;\n          let $tabList = self.getTabHtml(tabs);\n          $('#tabs ul').replaceWith($tabList);\n\n          if ($(this.selectedTabId)) {\n            $firstTab = $(Craft.cp.$tabs[0]);\n            $firstTab.find('a').addClass('sel');\n          }\n          Craft.cp.initTabs();\n\n          return true;\n        }\n\n        return false;\n      });\n    },\n\n    getTabHtml: function(tabs) {\n      console.log(tabs);\n      let $tabList = $('<ul></ul>');\n\n      for (let tab of tabs) {\n        console.log(Craft.cp.$selectedTab);\n        console.log(tabId === this.selectedTabId);\n        console.log(tabId == this.selectedTabId);\n        console.log(tab.id);\n        console.log(this.selectedTabId);\n        let tabId = tab.id;\n        let tabName = tab.name;\n        let selected = tabId === this.selectedTabId ? ' sel' : '';\n\n        $(`<li data-id=\"${tabId}\"><a id=\"tab-${tabId}\" class=\"tab${selected}\" href=\"#sproutforms-tab-${tabId}\" title=\"${tabName}\">${tabName}</a></li>`).appendTo($tabList);\n      }\n\n      return $tabList;\n    }\n\n  });\n})(jQuery);"],"sourceRoot":""}