{% requirePermission "sproutForms-editForms" %}

{% extends "sprout-forms/_layouts/base" %}
{% import 'sprout-base/_includes/sproutcp' as sprout %}
{% import "_includes/forms" as forms %}
{% import "sprout-forms/_includes/formbuilder" as formBuilder %}

{% set isPro = craft.app.getModule('sprout-forms').is('pro') %}

{% set crumbs = [
    { label: "Forms"|t('sprout-forms'), url: cpUrl('sprout-forms/forms') }
] %}

{% set fieldLayout = form.getFieldLayout() %}
{% set formFields = {} %}

{% set formTabs = {} %}
{% for tab in fieldLayout.getTabs() %}
    {% set formTabs = formTabs|merge({(tab.name) : {
        label: tab.name,
        url: '#sproutforms-tab-'~tab.id}
    }) %}
{% endfor %}

{% set title = form.name %}
{% set saveShortcutRedirect = continueEditingUrl %}
{% set fullPageForm = true %}
{% set selectedTab = '{{fieldLayout.getTabs()[0].name}}' %}

{% block actionButton %}
    <input type="hidden" name="action" value="sprout-forms/forms/save-form">
    {{ redirectInput('sprout-forms/forms') }}
    <input type="hidden" id="formId" name="formId" value="{{ form.id is defined ? form.id : '' }}">

    <div class="buttons">
        <div id="save-form-button" class="btngroup submit first">
            <input type="submit" class="btn submit"
                value="{{ 'Save'|t('sprout-forms') }}">
            {% if form.id != null %}
                <div class="btn submit menubtn"></div>
                <div class="menu">
                    <ul>
                        <li><a class="formsubmit"
                                data-redirect="{{ ('sprout-forms/forms/edit/'~form.id)|hash }}">{{ 'Save and continue editing'|t('sprout-forms') }}
                                <span class="shortcut">âŒ˜S</span></a></li>
                        <li><a class="formsubmit"
                                data-action="sprout-forms/forms/duplicate-form"
                                data-redirect="{{ 'sprout-forms/forms/edit/{id}'|hash }}"
                                data-param='saveAsNew'
                                data-value="true">{{ "Save as a new form"|t('sprout-forms') }}</a>
                        </li>
                    </ul>
                    <hr>
                    <ul>
                        <li><a class="formsubmit error"
                                data-action="sprout-forms/forms/delete-form"
                                data-confirm="{{ 'Are you sure you want to delete this form?'|t('sprout-forms') }}"
                                data-redirect="{{ 'sprout-forms/forms'|hash }}">{{ "Delete"|t('sprout-forms') }}</a>
                        </li>
                    </ul>
                </div>
            {% endif %}
        </div>

        <a href="{{ cpUrl('sprout-forms/forms/edit/'~ form.id ~'/settings/general/') }}"
            data-icon="settings" class="btn"></a>
        {% if not isPro %}
            {{ sprout.upgradeToProButton({
                url: cpUrl('sprout-forms/upgrade'),
                title: "Upgrade to Sprout Forms PRO to manage Unlimited Forms"|t('sprout-forms')
            }) }}
        {% endif %}
    </div>
{% endblock %}

{% block tabs %}
    {% if formTabs is defined and formTabs %}
        {% include "sprout-forms/_includes/tabs" %}
    {% endif %}
{% endblock %}

{% block content %}
    {# When we add tabs we need add a for loop here #}
    <div id="sproutforms-fieldlayout-container">

        {% if form.getFirstError('fieldLayoutId') %}
            {{ forms.errorList(form.getErrors('fieldLayoutId')) }}
        {% endif %}

        {# let's add the tabs and fields to the dropped divs #}
        {% if fieldLayout %}
            {% for tab in fieldLayout.getTabs() %}
                {{ formBuilder.tab(tab, tab.getFields(), not loop.first) }}
            {% endfor %}
        {% endif %}

        <div id="deletedFieldsContainer" class="hidden"></div>

    </div>

    {% hook 'cp.sproutForms.forms.edit.content' %}
{% endblock %}

{% block details %}
    {% include 'sprout-forms/forms/_sidebar/settings' %}

    {% hook 'cp.sproutForms.forms.edit.details' %}
{% endblock %}

{% do view.registerAssetBundle("craft\\web\\assets\\fields\\FieldsAsset") %}

{% js %}
    {% if not form.handle %}
        new Craft.HandleGenerator('#name', '#handle');
    {% endif %}

    new Craft.AdminTable({
    tableSelector: '#formFields',
    noObjectsSelector: '#noFormfields',
    sortable: true,
    reorderAction: 'sprout-forms/fields/reorderFields',
    deleteAction: 'sprout-forms/fields/deleteField'
    });

    $(document).ready(function() {

    if (Craft.SproutFields != null) {
    Craft.SproutFields.initFields($("#details"));
    }

    $("#maindiv").css("height","600px");

    $("input#display-form-code")
    .focus(function() { $(this).select(); } )
    .mouseup(function (e) {e.preventDefault(); });

    var tabs = {{ fieldLayout.getTabs()|json_encode()|raw }};

    var continueEditing = "{{ ('sprout-forms/forms/edit/'~form.id)|hash }}";

    new Craft.SproutForms.FieldLayoutEditor(tabs, continueEditing);
    new Craft.SproutForms.FormSettings();

    });
{% endjs %}
