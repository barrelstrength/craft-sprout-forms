{% do craft.sproutForms.addFieldVariables({
    'craft': craft,
    'now': now,
    'currentSite': currentSite,
    'currentUser': currentUser,
    'siteName': siteName,
    'siteUrl': siteUrl,
    'systemName': systemName
}) -%}
{%- set renderingOptions = renderingOptions is defined and renderingOptions is not empty ? renderingOptions : {} -%}
{%- set errors      = entry.getErrors()|length ? entry.getErrors() : false -%}
{%- set errorClass  = renderingOptions.errorClass is defined ? renderingOptions.errorClass : 'errors' -%}
{%- set id          = renderingOptions.id is defined ? renderingOptions.id : form.handle ~ '-form' -%}
{%- set class       = renderingOptions.class is defined ? renderingOptions.class : form.handle ~ '-form' -%}
{%- set redirectUri = form.redirectUri -%}
{% set fieldConditionalRules = form.getRules(true) %}

<form method="post" accept-charset="utf-8" enctype="multipart/form-data"
    {%- if id %} id="{{ id }}"{% endif -%}
    {%- if class %} class="{{ class -}}{%- if errors %} {{ errorClass }}{% endif -%}"{% endif -%}
>
    {{ csrfInput() }}
    <input type="hidden" aria-hidden="true" name="action" value="sprout-forms/entries/save-entry">
    <input type="hidden" aria-hidden="true" name="conditionalLogicResults" value="">
    <input type="hidden" aria-hidden="true" name="handle" value="{{ form.handle }}">
    {%- if redirectUri is not empty %}
        {% if redirectUri|slice(0, 1)|lower == '?' %}
            {%- set redirectUri = craft.app.request.getUrl()~redirectUri %}
        {% endif %}

        <input type="hidden" aria-hidden="true" name="redirect"
            value="{{ redirectUri|hash }}">
    {% endif %}

    <div class="fields">
        {%- for tab in form.getFieldLayout().getTabs() %}
            {{ craft.sproutForms.displayTab(form, tab.id, renderingOptions) }}
        {% endfor -%}
    </div>

    {% hook 'sproutForms.modifyForm' %}

    <div class="submit">
        <button type="submit">{{ form.submitButtonText is not empty ? form.submitButtonText : 'Submit'|t('site') }}</button>
    </div>
</form>

{# Add focus to the first field which has an error #}
{% if errors -%}
    {%- for labelId, error in errors %}
        {%- if loop.first %}
            {%- js at endBody %}
                (function() {
                var field = document.getElementById('fields-' + '{{ labelId }}');
                if (field) {
                field.focus();
                }
                })();
            {% endjs -%}
        {%- endif %}
    {%- endfor %}
{%- endif %}

{# @todo - update to dist folder #}
{%- set accessibilityJsUrl = view.getAssetManager().getPublishedUrl(
    '@sproutforms/web/assets/formtemplates/dist/js/accessibility.js',
    true) -%}
{%- do view.registerJsFile(accessibilityJsUrl) -%}

{%- set rulesJsUrl = view.getAssetManager().getPublishedUrl(
        '@sproutforms/web/assets/formtemplates/dist/js/rules.js',
        true) -%}
{%- do view.registerJsFile(rulesJsUrl) -%}

{%- set addressFieldJsUrl = view.getAssetManager().getPublishedUrl(
    '@sproutforms/web/assets/formtemplates/dist/js/addressfield.js',
    true) -%}
{%- do view.registerJsFile(addressFieldJsUrl) -%}

{% css %}
    .hidden{
    display: none !important;
    }
{% endcss %}

{% js at endBody %}
    (function() {
        window.csrfTokenName = "{{ craft.app.getConfig().getGeneral().csrfTokenName|e('js') }}";
        window.csrfTokenValue = "{{ craft.app.getRequest().csrfToken|e('js') }}";

        // Accessibility
        SproutFormsCheckableInputs.init({
            id: '{{ id }}'
        });

        // Conditional Logic
        SproutFormsRules.init({
            id: '{{ id }}',
            fieldConditionalRules: {{ fieldConditionalRules|json_encode|raw }}
        });

        // Address Field
        SproutFormsAddressField.init({
            id: '{{ id }}'
        });
    })();
{% endjs -%}
