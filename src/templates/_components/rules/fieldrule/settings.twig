{% import "_includes/forms" as forms %}

{% set conditionRules = fieldRule.getConditionRules() %}
{% set formFieldsAsOptions = fieldRule.getFormFieldsAsOptions(true) %}

{% set cols = [
    {
        type: 'select',
        options: formFieldsAsOptions
    },
    {
        type: 'selectCondition',
        options: []
    },
    {
        type: 'textual'
    }
] %}

{% for rule in fieldRule.conditionalRules %}
    {% set mainIndex = loop.index0 %}
    <table id="sproutforms-rules-{{ mainIndex }}" class="data fullwidth rules-table">
        <thead>
        <tr>
            <th>{{ "Field"|t('sprout-forms') }}</th>
            <th>{{ "Condition"|t('sprout-forms') }}</th>
            <th>{{ "Value"|t('sprout-forms') }}</th>
            <th class="thin"></th>
            <th class="thin"></th>
        </tr>
        </thead>
        <tbody>

        {% set formFieldHandle = "" %}
        {% set conditionClass = "" %}

        {% if rule.rules|length %}
            {% for rows in rule.rules %}
                {% set secondIndex = loop.index0 %}
                <tr data-id="{{ secondIndex }}">
                    {% for row in rows %}
                        <td>
                            {% set rowName = 'conditionalRules[' ~ mainIndex ~ '][rules][' ~ secondIndex ~ '][' ~ loop.index0 ~ ']' %}

                            {% if loop.index0 == 0 %}
                                {% set formFieldHandle = row %}
                                {% if formFieldHandle is empty %}
                                    {% set formFieldHandle = formFieldsAsOptions[0].value %}
                                {% endif %}
                                {{ forms.select({
                                    name: rowName,
                                    hasOptgroups: true,
                                    options: formFieldsAsOptions,
                                    value: row
                                }) }}
                            {% elseif loop.index0 == 1 %}
                                {% set formField = craft.sproutForms.getFormField(formFieldHandle, fieldRule.formId) %}
                                {% set rulesAsOptions = formField.getCompatibleConditional().getRulesAsOptions() %}
                                {{ forms.select({
                                    name: rowName,
                                    hasOptgroups: true,
                                    options: rulesAsOptions,
                                    value: row
                                }) }}
                                {% set conditionClass = row != '' ? row : rulesAsOptions[0].value %}
                            {% else %}
                                {% set fieldCondition = craft.sproutForms.getFieldCondition(conditionClass, formField) %}
                                {{ fieldCondition.getValueInputHtml(rowName, row)|raw }}
                            {% endif %}
                        </td>
                    {% endfor %}

                    <td class="thin action">
                        <div class="buttons">
                            <div id="add-rule{{ mainIndex }}" class="btn add icon small" tabindex="0">OR</div>
                        </div>
                    </td>
                    <td class="thin action">
                        <a class="delete icon" title="{{ "Delete"|t('sprout-forms') }}"></a>
                    </td>
                </tr>
            {% endfor %}
        {% endif %}
        </tbody>
    </table>
    {% if not loop.last %}
        <div class="rules-table-and">{{ "AND"|t('sprout-forms') }}</div>
    {% endif %}
{% endfor %}

<div class="buttons" id="and-add-wrapper">
    <div id="add-and-rules" class="btn add icon small rules-table-and-add" tabindex="0">AND</div>
</div>

<script>

  (function() {
    let addTableButton = $("#settings-barrelstrength-sproutforms-rules-FieldRule-add-and-rules");
    let rules = {{ fieldRule.conditionalRules|json_encode|raw }};
    let namespace = "settings[{{ className(fieldRule)|e('js') }}]";

    if (rules == null) {
      addTableButton.trigger('click');
    }

    addTableButton.on('click', function() {
      addTable();
    });

    let columns = {{ cols|json_encode|raw }};
    let conditionalTypes = {{ conditionRules|json_encode|raw }};
    let settings = {};

    function getAndTablesCount() {
      return $(".rules-table").length;
    }

    function addTable() {
      let tables = $(".rules-table");
      let currentIndex = tables.length ? tables.length : 0;
      let nextIndex = currentIndex + 1;
      let tableId = 'sprouts-rules-' + nextIndex;
      let baseName = namespace + '[conditionalRules][' + nextIndex + '][rules]';
      let andDiv = '<div class="rules-table-and">AND</div>';

      if (getAndTablesCount() === 0) {
        andDiv = '';
      }

      $("#settings-barrelstrength-sproutforms-rules-FieldRule-and-add-wrapper").before(andDiv + '<table id="' + tableId + '" class="data rules-table fullwidth">' +
        '<thead><tr>' +
        '<th>{{ "Field"|t('sprout-forms') }}</th>' +
        '<th>{{ "Condition"|t('sprout-forms') }}</th>' +
        '<th>{{ "Value"|t('sprout-forms') }}</th>' +
        '<th class="thin"></th>' +
        '<th class="thin"></th>' +
        '<tbody>' +
        '</tbody>' +
        '</table>');

      new Craft.SproutForms.EditableTable(tableId, baseName, columns, settings, conditionalTypes);

      $('#add-rule' + nextIndex).trigger('click');
    }

    $('.rules-table').each(function(index) {
      let tableId = this.id;
      let baseName = namespace + '[conditionalRules][' + index + '][rules]';
      new Craft.SproutForms.EditableTable(tableId, baseName, columns, settings, conditionalTypes);
    });

    if (getAndTablesCount() === 0) {
      addTable();
    }
  })();

</script>

